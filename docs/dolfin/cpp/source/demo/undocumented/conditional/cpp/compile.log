This is FFC, the FEniCS Form Compiler, version 0.9.10.
For further information, visit http://www.fenics.org/ffc/.

Compiling form Conditional

Compiler stage 1: Analyzing form(s)
-----------------------------------
  
  Name:                             'a'
  Rank:                             2
  Cell:                             <triangle cell in R2>
  Topological dimension:            2
  Geometric dimension:              2
  Number of facets:                 3
  Number of coefficients:           0
  Number of cell domains:           1
  Number of exterior facet domains: 0
  Number or interior facet domains: 0
  Number of macro cell domains:     0
  Number of surface domains:        0
  Arguments:                        '[v_0, v_1]'
  Coefficients:                     '[]'
  Argument names:                   '[v, u]'
  Coefficient names:                '[]'
  Unique elements:                  'CG2(?)'
  Unique sub elements:              'CG2(?)'
  
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Estimated cost of tensor representation: 2
  representation:    auto --> tensor
  Selecting quadrature degree based on total polynomial degree of integrand: 2
  quadrature_degree: auto --> 2
  quadrature_rule:   auto --> default
  
  Name:                             'L'
  Rank:                             1
  Cell:                             <triangle cell in R2>
  Topological dimension:            2
  Geometric dimension:              2
  Number of facets:                 3
  Number of coefficients:           0
  Number of cell domains:           1
  Number of exterior facet domains: 0
  Number or interior facet domains: 0
  Number of macro cell domains:     0
  Number of surface domains:        0
  Arguments:                        '[v_0]'
  Coefficients:                     '[]'
  Argument names:                   '[v]'
  Coefficient names:                '[]'
  Unique elements:                  'CG2(?)'
  Unique sub elements:              'CG2(?)'
  
  Extracting monomial form representation from UFL form
  Monomial extraction failed: No handler defined for terminal SpatialCoordinate.
  Estimated cost of tensor representation: -1
  representation:    auto --> quadrature
  Selecting quadrature degree based on total polynomial degree of integrand: 4
  quadrature_degree: auto --> 4
  quadrature_rule:   auto --> default
  
Compiler stage 1 finished in 0.041574 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 1 elements
  Reusing element from cache
  Computing representation of 1 dofmaps
  Reusing element from cache
  Computing representation of integrals
  Computing tensor representation
  Extracting monomial form representation from UFL form
  Reusing monomial integrand from cache
  Transforming monomial form to reference element
  Precomputing integrals on reference element
  Reusing element from cache
  144 entries computed in 0.00334 seconds
  Shape of reference tensor: (6, 6, 2, 2)
  Primary multi index:   rank = 2 dims = [6, 6] indices = [[0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [1, 0], [1, 1], [1, 2], [1, 3], [1, 4], [1, 5], [2, 0], [2, 1], [2, 2], [2, 3], [2, 4], [2, 5], [3, 0], [3, 1], [3, 2], [3, 3], [3, 4], [3, 5], [4, 0], [4, 1], [4, 2], [4, 3], [4, 4], [4, 5], [5, 0], [5, 1], [5, 2], [5, 3], [5, 4], [5, 5]]
  Secondary multi index: rank = 2 dims = [2, 2] indices = [[0, 0], [0, 1], [1, 0], [1, 1]]
  Internal multi index:  rank = 0 dims = [] indices = [[]]
  Secondary multi index: rank = 2 dims = [2, 2] indices = [[0, 0], [0, 1], [1, 0], [1, 1]]
  External multi index:  rank = 1 dims = [2] indices = [[0], [1]]
  Computing quadrature representation
  Reusing element from cache
  Reusing element from cache
  
  QG-utils, psi_tables:
  {6: {FiniteElement('Lagrange', Cell('triangle', Space(2)), 2, None): {None: {(0, 0): array([[-0.0748038077482, -0.0748038077482, 0.517632341988,
          -0.0482083778155, -0.0482083778155, -0.084730493094],
         [0.517632341988, -0.0748038077482, -0.0748038077482,
          -0.084730493094, -0.0482083778155, -0.0482083778155],
         [-0.0748038077482, 0.517632341988, -0.0748038077482,
          -0.0482083778155, -0.084730493094, -0.0482083778155],
         [0.299215230993, 0.299215230993, 0.0335448115231, 0.192833511262,
          0.192833511262, 0.795480226201],
         [0.0335448115231, 0.299215230993, 0.299215230993, 0.795480226201,
          0.192833511262, 0.192833511262],
         [0.299215230993, 0.0335448115231, 0.299215230993, 0.192833511262,
          0.795480226201, 0.192833511262]], dtype=object)}}}}
  
  QG-utils, psi_tables, flat_tables:
  {'FE0': array([[-0.0748038077482, 0.517632341988, -0.0748038077482, 0.299215230993,
          0.0335448115231, 0.299215230993],
         [-0.0748038077482, -0.0748038077482, 0.517632341988, 0.299215230993,
          0.299215230993, 0.0335448115231],
         [0.517632341988, -0.0748038077482, -0.0748038077482,
          0.0335448115231, 0.299215230993, 0.299215230993],
         [-0.0482083778155, -0.084730493094, -0.0482083778155,
          0.192833511262, 0.795480226201, 0.192833511262],
         [-0.0482083778155, -0.0482083778155, -0.084730493094,
          0.192833511262, 0.192833511262, 0.795480226201],
         [-0.084730493094, -0.0482083778155, -0.0482083778155,
          0.795480226201, 0.192833511262, 0.192833511262]], dtype=object)}
  
  tables: {'FE0': array([[-0.0748038077482, 0.517632341988, -0.0748038077482, 0.299215230993,
          0.0335448115231, 0.299215230993],
         [-0.0748038077482, -0.0748038077482, 0.517632341988, 0.299215230993,
          0.299215230993, 0.0335448115231],
         [0.517632341988, -0.0748038077482, -0.0748038077482,
          0.0335448115231, 0.299215230993, 0.299215230993],
         [-0.0482083778155, -0.084730493094, -0.0482083778155,
          0.192833511262, 0.795480226201, 0.192833511262],
         [-0.0482083778155, -0.0482083778155, -0.084730493094,
          0.192833511262, 0.192833511262, 0.795480226201],
         [-0.084730493094, -0.0482083778155, -0.0482083778155,
          0.795480226201, 0.192833511262, 0.192833511262]], dtype=object)}
  
  name_map: {}
  
  inv_name_map: {'FE0': 'FE0'}
  
  QG-utils, psi_tables, unique_tables:
  {'FE0': array([[-0.0748038077482, 0.517632341988, -0.0748038077482, 0.299215230993,
          0.0335448115231, 0.299215230993],
         [-0.0748038077482, -0.0748038077482, 0.517632341988, 0.299215230993,
          0.299215230993, 0.0335448115231],
         [0.517632341988, -0.0748038077482, -0.0748038077482,
          0.0335448115231, 0.299215230993, 0.299215230993],
         [-0.0482083778155, -0.084730493094, -0.0482083778155,
          0.192833511262, 0.795480226201, 0.192833511262],
         [-0.0482083778155, -0.0482083778155, -0.084730493094,
          0.192833511262, 0.192833511262, 0.795480226201],
         [-0.084730493094, -0.0482083778155, -0.0482083778155,
          0.795480226201, 0.192833511262, 0.192833511262]], dtype=object)}
  
  QG-utils, psi_tables, name_map:
  {'FE0': ('FE0', (), False, False)}
  Transforming cell integral
  Reusing element from cache
  Reusing element from cache
  Computing representation of forms
  
Compiler stage 2 finished in 0.029448 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Skipping FErari optimizations as requested.
  Optimising expressions for cell integral
  
Compiler stage 3 finished in 0.00129318 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 1 elements
  Removing unused variable: K_11
  Removing unused variable: K_10
  Removing unused variable: K_01
  Removing unused variable: K_00
  Generating code for 1 dofmaps
  Generating code for integrals
  Removing unused variable: circumradius
  Removing unused variable: v0v1
  Removing unused variable: v0v2
  Removing unused variable: v1v2
  Removing unused variable: volume
  Removing unused variable: K_11
  Removing unused variable: K_10
  Removing unused variable: K_01
  Removing unused variable: K_00
  Cell, number of operations to compute tensor: 288
  Generating code for forms
  
Compiler stage 4 finished in 0.251128 seconds.

Compiler stage 4.1: Generating additional wrapper code
------------------------------------------------------
  Generating wrapper code for DOLFIN
  
Compiler stage 4.1 finished in 0.00223398 seconds.

Compiler stage 5: Formatting code
---------------------------------
  Output written to ./Conditional.h.
  
Compiler stage 5 finished in 0.00160384 seconds.

[1;37;32mFFC finished in 0.327873 seconds.[0m
This is FFC, the FEniCS Form Compiler, version 0.9.10.
For further information, visit http://www.fenics.org/ffc/.

Compiling form Conditional

Compiler stage 1: Analyzing form(s)
-----------------------------------
  
  Name:                             'a'
  Rank:                             2
  Cell:                             <triangle cell in R2>
  Topological dimension:            2
  Geometric dimension:              2
  Number of facets:                 3
  Number of coefficients:           0
  Number of cell domains:           1
  Number of exterior facet domains: 0
  Number or interior facet domains: 0
  Number of macro cell domains:     0
  Number of surface domains:        0
  Arguments:                        '[v_0, v_1]'
  Coefficients:                     '[]'
  Argument names:                   '[v, u]'
  Coefficient names:                '[]'
  Unique elements:                  'CG2(?)'
  Unique sub elements:              'CG2(?)'
  
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Estimated cost of tensor representation: 2
  representation:    auto --> tensor
  Selecting quadrature degree based on total polynomial degree of integrand: 2
  quadrature_degree: auto --> 2
  quadrature_rule:   auto --> default
  
  Name:                             'L'
  Rank:                             1
  Cell:                             <triangle cell in R2>
  Topological dimension:            2
  Geometric dimension:              2
  Number of facets:                 3
  Number of coefficients:           0
  Number of cell domains:           1
  Number of exterior facet domains: 0
  Number or interior facet domains: 0
  Number of macro cell domains:     0
  Number of surface domains:        0
  Arguments:                        '[v_0]'
  Coefficients:                     '[]'
  Argument names:                   '[v]'
  Coefficient names:                '[]'
  Unique elements:                  'CG2(?)'
  Unique sub elements:              'CG2(?)'
  
  Extracting monomial form representation from UFL form
  Monomial extraction failed: No handler defined for terminal SpatialCoordinate.
  Estimated cost of tensor representation: -1
  representation:    auto --> quadrature
  Selecting quadrature degree based on total polynomial degree of integrand: 4
  quadrature_degree: auto --> 4
  quadrature_rule:   auto --> default
  
Compiler stage 1 finished in 0.0416219 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 1 elements
  Reusing element from cache
  Computing representation of 1 dofmaps
  Reusing element from cache
  Computing representation of integrals
  Computing tensor representation
  Extracting monomial form representation from UFL form
  Reusing monomial integrand from cache
  Transforming monomial form to reference element
  Precomputing integrals on reference element
  Reusing element from cache
  144 entries computed in 0.00341 seconds
  Shape of reference tensor: (6, 6, 2, 2)
  Primary multi index:   rank = 2 dims = [6, 6] indices = [[0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [1, 0], [1, 1], [1, 2], [1, 3], [1, 4], [1, 5], [2, 0], [2, 1], [2, 2], [2, 3], [2, 4], [2, 5], [3, 0], [3, 1], [3, 2], [3, 3], [3, 4], [3, 5], [4, 0], [4, 1], [4, 2], [4, 3], [4, 4], [4, 5], [5, 0], [5, 1], [5, 2], [5, 3], [5, 4], [5, 5]]
  Secondary multi index: rank = 2 dims = [2, 2] indices = [[0, 0], [0, 1], [1, 0], [1, 1]]
  Internal multi index:  rank = 0 dims = [] indices = [[]]
  Secondary multi index: rank = 2 dims = [2, 2] indices = [[0, 0], [0, 1], [1, 0], [1, 1]]
  External multi index:  rank = 1 dims = [2] indices = [[0], [1]]
  Computing quadrature representation
  Reusing element from cache
  Reusing element from cache
  
  QG-utils, psi_tables:
  {6: {FiniteElement('Lagrange', Cell('triangle', Space(2)), 2, None): {None: {(0, 0): array([[-0.0748038077482, -0.0748038077482, 0.517632341988,
          -0.0482083778155, -0.0482083778155, -0.084730493094],
         [0.517632341988, -0.0748038077482, -0.0748038077482,
          -0.084730493094, -0.0482083778155, -0.0482083778155],
         [-0.0748038077482, 0.517632341988, -0.0748038077482,
          -0.0482083778155, -0.084730493094, -0.0482083778155],
         [0.299215230993, 0.299215230993, 0.0335448115231, 0.192833511262,
          0.192833511262, 0.795480226201],
         [0.0335448115231, 0.299215230993, 0.299215230993, 0.795480226201,
          0.192833511262, 0.192833511262],
         [0.299215230993, 0.0335448115231, 0.299215230993, 0.192833511262,
          0.795480226201, 0.192833511262]], dtype=object)}}}}
  
  QG-utils, psi_tables, flat_tables:
  {'FE0': array([[-0.0748038077482, 0.517632341988, -0.0748038077482, 0.299215230993,
          0.0335448115231, 0.299215230993],
         [-0.0748038077482, -0.0748038077482, 0.517632341988, 0.299215230993,
          0.299215230993, 0.0335448115231],
         [0.517632341988, -0.0748038077482, -0.0748038077482,
          0.0335448115231, 0.299215230993, 0.299215230993],
         [-0.0482083778155, -0.084730493094, -0.0482083778155,
          0.192833511262, 0.795480226201, 0.192833511262],
         [-0.0482083778155, -0.0482083778155, -0.084730493094,
          0.192833511262, 0.192833511262, 0.795480226201],
         [-0.084730493094, -0.0482083778155, -0.0482083778155,
          0.795480226201, 0.192833511262, 0.192833511262]], dtype=object)}
  
  tables: {'FE0': array([[-0.0748038077482, 0.517632341988, -0.0748038077482, 0.299215230993,
          0.0335448115231, 0.299215230993],
         [-0.0748038077482, -0.0748038077482, 0.517632341988, 0.299215230993,
          0.299215230993, 0.0335448115231],
         [0.517632341988, -0.0748038077482, -0.0748038077482,
          0.0335448115231, 0.299215230993, 0.299215230993],
         [-0.0482083778155, -0.084730493094, -0.0482083778155,
          0.192833511262, 0.795480226201, 0.192833511262],
         [-0.0482083778155, -0.0482083778155, -0.084730493094,
          0.192833511262, 0.192833511262, 0.795480226201],
         [-0.084730493094, -0.0482083778155, -0.0482083778155,
          0.795480226201, 0.192833511262, 0.192833511262]], dtype=object)}
  
  name_map: {}
  
  inv_name_map: {'FE0': 'FE0'}
  
  QG-utils, psi_tables, unique_tables:
  {'FE0': array([[-0.0748038077482, 0.517632341988, -0.0748038077482, 0.299215230993,
          0.0335448115231, 0.299215230993],
         [-0.0748038077482, -0.0748038077482, 0.517632341988, 0.299215230993,
          0.299215230993, 0.0335448115231],
         [0.517632341988, -0.0748038077482, -0.0748038077482,
          0.0335448115231, 0.299215230993, 0.299215230993],
         [-0.0482083778155, -0.084730493094, -0.0482083778155,
          0.192833511262, 0.795480226201, 0.192833511262],
         [-0.0482083778155, -0.0482083778155, -0.084730493094,
          0.192833511262, 0.192833511262, 0.795480226201],
         [-0.084730493094, -0.0482083778155, -0.0482083778155,
          0.795480226201, 0.192833511262, 0.192833511262]], dtype=object)}
  
  QG-utils, psi_tables, name_map:
  {'FE0': ('FE0', (), False, False)}
  Transforming cell integral
  Reusing element from cache
  Reusing element from cache
  Computing representation of forms
  
Compiler stage 2 finished in 0.0321131 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Skipping FErari optimizations as requested.
  Optimising expressions for cell integral
  
Compiler stage 3 finished in 0.00132799 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 1 elements
  Removing unused variable: K_11
  Removing unused variable: K_10
  Removing unused variable: K_01
  Removing unused variable: K_00
  Generating code for 1 dofmaps
  Generating code for integrals
  Removing unused variable: circumradius
  Removing unused variable: v0v1
  Removing unused variable: v0v2
  Removing unused variable: v1v2
  Removing unused variable: volume
  Removing unused variable: K_11
  Removing unused variable: K_10
  Removing unused variable: K_01
  Removing unused variable: K_00
  Cell, number of operations to compute tensor: 288
  Generating code for forms
  
Compiler stage 4 finished in 0.270099 seconds.

Compiler stage 4.1: Generating additional wrapper code
------------------------------------------------------
  Generating wrapper code for DOLFIN
  
Compiler stage 4.1 finished in 0.00226688 seconds.

Compiler stage 5: Formatting code
---------------------------------
  Output written to ./Conditional.h.
  
Compiler stage 5 finished in 0.00147009 seconds.

[1;37;32mFFC finished in 0.34946 seconds.[0m
