This is FFC, the FEniCS Form Compiler, version 0.9.10.
For further information, visit http://www.fenics.org/ffc/.

Compiling form Projection

Compiler stage 1: Analyzing form(s)
-----------------------------------
  
  Name:                             'a'
  Rank:                             2
  Cell:                             <triangle cell in R2>
  Topological dimension:            2
  Geometric dimension:              2
  Number of facets:                 3
  Number of coefficients:           0
  Number of cell domains:           1
  Number of exterior facet domains: 0
  Number or interior facet domains: 0
  Number of macro cell domains:     0
  Number of surface domains:        0
  Arguments:                        '[v_0, v_1]'
  Coefficients:                     '[]'
  Argument names:                   '[v, phi]'
  Coefficient names:                '[]'
  Unique elements:                  'CG1(?)'
  Unique sub elements:              'CG1(?)'
  
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Estimated cost of tensor representation: 0
  representation:    auto --> tensor
  Selecting quadrature degree based on total polynomial degree of integrand: 2
  quadrature_degree: auto --> 2
  quadrature_rule:   auto --> default
  
  Name:                             'L'
  Rank:                             1
  Cell:                             <triangle cell in R2>
  Topological dimension:            2
  Geometric dimension:              2
  Number of facets:                 3
  Number of coefficients:           1
  Number of cell domains:           1
  Number of exterior facet domains: 0
  Number or interior facet domains: 0
  Number of macro cell domains:     0
  Number of surface domains:        0
  Arguments:                        '[v_0]'
  Coefficients:                     '[w_0]'
  Argument names:                   '[v]'
  Coefficient names:                '[phi0]'
  Unique elements:                  'CG1(?), DG1(?)'
  Unique sub elements:              'CG1(?), DG1(?)'
  
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Estimated cost of tensor representation: 1
  representation:    auto --> tensor
  Selecting quadrature degree based on total polynomial degree of integrand: 2
  quadrature_degree: auto --> 2
  quadrature_rule:   auto --> default
  
Compiler stage 1 finished in 0.031584 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 2 elements
  Reusing element from cache
  Reusing element from cache
  Computing representation of 2 dofmaps
  Reusing element from cache
  Reusing element from cache
  Computing representation of integrals
  Computing tensor representation
  Extracting monomial form representation from UFL form
  Reusing monomial integrand from cache
  Transforming monomial form to reference element
  Precomputing integrals on reference element
  Reusing element from cache
  9 entries computed in 0.0027 seconds
  Shape of reference tensor: (3, 3)
  Primary multi index:   rank = 2 dims = [3, 3] indices = [[0, 0], [0, 1], [0, 2], [1, 0], [1, 1], [1, 2], [2, 0], [2, 1], [2, 2]]
  Secondary multi index: rank = 0 dims = [] indices = [[]]
  Internal multi index:  rank = 0 dims = [] indices = [[]]
  Secondary multi index: rank = 0 dims = [] indices = [[]]
  External multi index:  rank = 0 dims = [] indices = [[]]
  Computing tensor representation
  Extracting monomial form representation from UFL form
  Reusing monomial integrand from cache
  Transforming monomial form to reference element
  Precomputing integrals on reference element
  Reusing element from cache
  Reusing element from cache
  9 entries computed in 0.00338 seconds
  Shape of reference tensor: (3, 3)
  Primary multi index:   rank = 1 dims = [3] indices = [[0], [1], [2]]
  Secondary multi index: rank = 1 dims = [3] indices = [[0], [1], [2]]
  Internal multi index:  rank = 0 dims = [] indices = [[]]
  Secondary multi index: rank = 1 dims = [3] indices = [[0], [1], [2]]
  External multi index:  rank = 0 dims = [] indices = [[]]
  Computing representation of forms
  
Compiler stage 2 finished in 0.0219848 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Skipping FErari optimizations as requested.
  Skipping FErari optimizations as requested.
  
Compiler stage 3 finished in 0.000849962 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 2 elements
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: K_11
  Removing unused variable: K_10
  Removing unused variable: K_01
  Removing unused variable: K_00
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: K_11
  Removing unused variable: K_10
  Removing unused variable: K_01
  Removing unused variable: K_00
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Generating code for 2 dofmaps
  Generating code for integrals
  Removing unused variable: K_11
  Removing unused variable: K_10
  Removing unused variable: K_01
  Removing unused variable: K_00
  Removing unused variable: K_11
  Removing unused variable: K_10
  Removing unused variable: K_01
  Removing unused variable: K_00
  Generating code for forms
  
Compiler stage 4 finished in 0.186813 seconds.

Compiler stage 4.1: Generating additional wrapper code
------------------------------------------------------
  Generating wrapper code for DOLFIN
  
Compiler stage 4.1 finished in 0.0023911 seconds.

Compiler stage 5: Formatting code
---------------------------------
  Output written to ./Projection.h.
  
Compiler stage 5 finished in 0.001369 seconds.

[1;37;32mFFC finished in 0.245732 seconds.[0m
This is FFC, the FEniCS Form Compiler, version 0.9.10.
For further information, visit http://www.fenics.org/ffc/.

Compiling form AdvectionDiffusion

Compiler stage 1: Analyzing form(s)
-----------------------------------
  
  Name:                             'a'
  Rank:                             2
  Cell:                             <triangle cell in R2>
  Topological dimension:            2
  Geometric dimension:              2
  Number of facets:                 3
  Number of coefficients:           4
  Number of cell domains:           1
  Number of exterior facet domains: 1
  Number or interior facet domains: 1
  Number of macro cell domains:     0
  Number of surface domains:        0
  Arguments:                        '[v_0, v_1]'
  Coefficients:                     '[w_0, c_1, c_2, c_3]'
  Argument names:                   '[v, phi]'
  Coefficient names:                '[u, h, kappa, alpha]'
  Unique elements:                  'DG1(?), Vector<2 x CG2(?)>, DG0(?)'
  Unique sub elements:              'DG1(?), Vector<2 x CG2(?)>, DG0(?), CG2(?)'
  
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Estimated cost of tensor representation: 3
  representation:    auto --> tensor
  Selecting quadrature degree based on total polynomial degree of integrand: 3
  quadrature_degree: auto --> 3
  quadrature_rule:   auto --> default
  Extracting monomial form representation from UFL form
  Monomial extraction failed: No handler defined for terminal FacetNormal.
  Estimated cost of tensor representation: -1
  representation:    auto --> quadrature
  Selecting quadrature degree based on total polynomial degree of integrand: 4
  quadrature_degree: auto --> 4
  quadrature_rule:   auto --> default
  Extracting monomial form representation from UFL form
  Monomial extraction failed: No handler defined for terminal FacetNormal.
  Estimated cost of tensor representation: -1
  representation:    auto --> quadrature
  Selecting quadrature degree based on total polynomial degree of integrand: 4
  quadrature_degree: auto --> 4
  quadrature_rule:   auto --> default
  
  Name:                             'L'
  Rank:                             1
  Cell:                             <triangle cell in R2>
  Topological dimension:            2
  Geometric dimension:              2
  Number of facets:                 3
  Number of coefficients:           1
  Number of cell domains:           1
  Number of exterior facet domains: 0
  Number or interior facet domains: 0
  Number of macro cell domains:     0
  Number of surface domains:        0
  Arguments:                        '[v_0]'
  Coefficients:                     '[w_0]'
  Argument names:                   '[v]'
  Coefficient names:                '[f]'
  Unique elements:                  'DG1(?)'
  Unique sub elements:              'DG1(?)'
  
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Reusing element from cache
  Estimated cost of tensor representation: 1
  representation:    auto --> tensor
  Selecting quadrature degree based on total polynomial degree of integrand: 2
  quadrature_degree: auto --> 2
  quadrature_rule:   auto --> default
  
Compiler stage 1 finished in 0.089725 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 4 elements
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Computing representation of 4 dofmaps
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Computing representation of integrals
  Computing tensor representation
  Extracting monomial form representation from UFL form
  Reusing monomial integrand from cache
  Transforming monomial form to reference element
  Precomputing integrals on reference element
  Reusing element from cache
  Reusing element from cache
  36 entries computed in 0.00276 seconds
  Shape of reference tensor: (3, 3, 2, 1, 2)
  Primary multi index:   rank = 2 dims = [3, 3] indices = [[0, 0], [0, 1], [0, 2], [1, 0], [1, 1], [1, 2], [2, 0], [2, 1], [2, 2]]
  Secondary multi index: rank = 3 dims = [2, 1, 2] indices = [[0, 0, 0], [0, 0, 1], [1, 0, 0], [1, 0, 1]]
  Internal multi index:  rank = 0 dims = [] indices = [[]]
  Secondary multi index: rank = 3 dims = [2, 1, 2] indices = [[0, 0, 0], [0, 0, 1], [1, 0, 0], [1, 0, 1]]
  External multi index:  rank = 1 dims = [2] indices = [[0], [1]]
  Precomputing integrals on reference element
  Reusing element from cache
  Reusing element from cache
  432 entries computed in 0.00536 seconds
  Shape of reference tensor: (3, 3, 2, 12, 2)
  Primary multi index:   rank = 2 dims = [3, 3] indices = [[0, 0], [0, 1], [0, 2], [1, 0], [1, 1], [1, 2], [2, 0], [2, 1], [2, 2]]
  Secondary multi index: rank = 3 dims = [2, 12, 2] indices = [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [0, 2, 0], [0, 2, 1], [0, 3, 0], [0, 3, 1], [0, 4, 0], [0, 4, 1], [0, 5, 0], [0, 5, 1], [0, 6, 0], [0, 6, 1], [0, 7, 0], [0, 7, 1], [0, 8, 0], [0, 8, 1], [0, 9, 0], [0, 9, 1], [0, 10, 0], [0, 10, 1], [0, 11, 0], [0, 11, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1], [1, 2, 0], [1, 2, 1], [1, 3, 0], [1, 3, 1], [1, 4, 0], [1, 4, 1], [1, 5, 0], [1, 5, 1], [1, 6, 0], [1, 6, 1], [1, 7, 0], [1, 7, 1], [1, 8, 0], [1, 8, 1], [1, 9, 0], [1, 9, 1], [1, 10, 0], [1, 10, 1], [1, 11, 0], [1, 11, 1]]
  Internal multi index:  rank = 0 dims = [] indices = [[]]
  Secondary multi index: rank = 3 dims = [2, 12, 2] indices = [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [0, 2, 0], [0, 2, 1], [0, 3, 0], [0, 3, 1], [0, 4, 0], [0, 4, 1], [0, 5, 0], [0, 5, 1], [0, 6, 0], [0, 6, 1], [0, 7, 0], [0, 7, 1], [0, 8, 0], [0, 8, 1], [0, 9, 0], [0, 9, 1], [0, 10, 0], [0, 10, 1], [0, 11, 0], [0, 11, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1], [1, 2, 0], [1, 2, 1], [1, 3, 0], [1, 3, 1], [1, 4, 0], [1, 4, 1], [1, 5, 0], [1, 5, 1], [1, 6, 0], [1, 6, 1], [1, 7, 0], [1, 7, 1], [1, 8, 0], [1, 8, 1], [1, 9, 0], [1, 9, 1], [1, 10, 0], [1, 10, 1], [1, 11, 0], [1, 11, 1]]
  External multi index:  rank = 0 dims = [] indices = [[]]
  Computing quadrature representation
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  
  QG-utils, psi_tables:
  {3: {VectorElement('Lagrange', Cell('triangle', Space(2)), 2, 2, None): {0: {(0, 0): array([[[  1.97758476e-16,   2.08166817e-16,   1.66533454e-16],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  6.87298335e-01,   3.46944695e-17,  -8.72983346e-02],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -8.72983346e-02,   4.16333634e-17,   6.87298335e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  4.00000000e-01,   1.00000000e+00,   4.00000000e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -3.46944695e-17,  -1.38777878e-17,  -5.55111512e-17],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -1.30104261e-16,   9.71445147e-17,   1.38777878e-16],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  1.97758476e-16,   2.08166817e-16,   1.66533454e-16]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  6.87298335e-01,   3.46944695e-17,  -8.72983346e-02]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -8.72983346e-02,   4.16333634e-17,   6.87298335e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  4.00000000e-01,   1.00000000e+00,   4.00000000e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -3.46944695e-17,  -1.38777878e-17,  -5.55111512e-17]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -1.30104261e-16,   9.71445147e-17,   1.38777878e-16]]])}, 1: {(0, 0): array([[[  6.87298335e-01,   2.77555756e-17,  -8.72983346e-02],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  1.09287579e-16,   4.85722573e-17,   1.11022302e-16],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -8.72983346e-02,   4.16333634e-17,   6.87298335e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -2.77555756e-17,  -2.77555756e-17,   0.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  4.00000000e-01,   1.00000000e+00,   4.00000000e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -1.12757026e-16,   6.93889390e-17,   1.11022302e-16],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  6.87298335e-01,   2.77555756e-17,  -8.72983346e-02]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  1.09287579e-16,   4.85722573e-17,   1.11022302e-16]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -8.72983346e-02,   4.16333634e-17,   6.87298335e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -2.77555756e-17,  -2.77555756e-17,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  4.00000000e-01,   1.00000000e+00,   4.00000000e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -1.12757026e-16,   6.93889390e-17,   1.11022302e-16]]])}, 2: {(0, 0): array([[[  6.87298335e-01,   9.71445147e-17,  -8.72983346e-02],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -8.72983346e-02,   8.32667268e-17,   6.87298335e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -5.55111512e-17,   0.00000000e+00,   1.11022302e-16],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  8.32667268e-17,  -2.77555756e-17,  -8.32667268e-17],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  4.00000000e-01,   1.00000000e+00,   4.00000000e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  6.87298335e-01,   9.71445147e-17,  -8.72983346e-02]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -8.72983346e-02,   8.32667268e-17,   6.87298335e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -5.55111512e-17,   0.00000000e+00,   1.11022302e-16]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  8.32667268e-17,  -2.77555756e-17,  -8.32667268e-17]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  4.00000000e-01,   1.00000000e+00,   4.00000000e-01]]])}}, FiniteElement('Discontinuous Lagrange', Cell('triangle', Space(2)), 1, None): {0: {(0, 0): array([[2.77555756156e-17, 4.16333634234e-17, 5.55111512313e-17],
         [0.887298334621, 0.5, 0.112701665379],
         [0.112701665379, 0.5, 0.887298334621]], dtype=object)}, 1: {(0, 0): array([[0.887298334621, 0.5, 0.112701665379],
         [2.77555756156e-17, 4.16333634234e-17, 5.55111512313e-17],
         [0.112701665379, 0.5, 0.887298334621]], dtype=object)}, 2: {(0, 0): array([[0.887298334621, 0.5, 0.112701665379],
         [0.112701665379, 0.5, 0.887298334621],
         [0.0, 0.0, 0.0]], dtype=object)}}}}
  
  QG-utils, psi_tables, flat_tables:
  {'FE0_f0': array([[2.77555756156e-17, 0.887298334621, 0.112701665379],
         [4.16333634234e-17, 0.5, 0.5],
         [5.55111512313e-17, 0.112701665379, 0.887298334621]], dtype=object), 'FE0_f1': array([[0.887298334621, 2.77555756156e-17, 0.112701665379],
         [0.5, 4.16333634234e-17, 0.5],
         [0.112701665379, 5.55111512313e-17, 0.887298334621]], dtype=object), 'FE0_f2': array([[0.887298334621, 0.112701665379, 0.0],
         [0.5, 0.5, 0.0],
         [0.112701665379, 0.887298334621, 0.0]], dtype=object), 'FE1_f0_C0': array([[  1.97758476e-16,   6.87298335e-01,  -8.72983346e-02,
            4.00000000e-01,  -3.46944695e-17,  -1.30104261e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  2.08166817e-16,   3.46944695e-17,   4.16333634e-17,
            1.00000000e+00,  -1.38777878e-17,   9.71445147e-17,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  1.66533454e-16,  -8.72983346e-02,   6.87298335e-01,
            4.00000000e-01,  -5.55111512e-17,   1.38777878e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f0_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            1.97758476e-16,   6.87298335e-01,  -8.72983346e-02,
            4.00000000e-01,  -3.46944695e-17,  -1.30104261e-16],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            2.08166817e-16,   3.46944695e-17,   4.16333634e-17,
            1.00000000e+00,  -1.38777878e-17,   9.71445147e-17],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            1.66533454e-16,  -8.72983346e-02,   6.87298335e-01,
            4.00000000e-01,  -5.55111512e-17,   1.38777878e-16]]), 'FE1_f2_C0': array([[  6.87298335e-01,  -8.72983346e-02,   0.00000000e+00,
           -5.55111512e-17,   8.32667268e-17,   4.00000000e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  9.71445147e-17,   8.32667268e-17,   0.00000000e+00,
            0.00000000e+00,  -2.77555756e-17,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -8.72983346e-02,   6.87298335e-01,   0.00000000e+00,
            1.11022302e-16,  -8.32667268e-17,   4.00000000e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f2_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            6.87298335e-01,  -8.72983346e-02,   0.00000000e+00,
           -5.55111512e-17,   8.32667268e-17,   4.00000000e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            9.71445147e-17,   8.32667268e-17,   0.00000000e+00,
            0.00000000e+00,  -2.77555756e-17,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -8.72983346e-02,   6.87298335e-01,   0.00000000e+00,
            1.11022302e-16,  -8.32667268e-17,   4.00000000e-01]]), 'FE1_f1_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            6.87298335e-01,   1.09287579e-16,  -8.72983346e-02,
           -2.77555756e-17,   4.00000000e-01,  -1.12757026e-16],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            2.77555756e-17,   4.85722573e-17,   4.16333634e-17,
           -2.77555756e-17,   1.00000000e+00,   6.93889390e-17],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -8.72983346e-02,   1.11022302e-16,   6.87298335e-01,
            0.00000000e+00,   4.00000000e-01,   1.11022302e-16]]), 'FE1_f1_C0': array([[  6.87298335e-01,   1.09287579e-16,  -8.72983346e-02,
           -2.77555756e-17,   4.00000000e-01,  -1.12757026e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  2.77555756e-17,   4.85722573e-17,   4.16333634e-17,
           -2.77555756e-17,   1.00000000e+00,   6.93889390e-17,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -8.72983346e-02,   1.11022302e-16,   6.87298335e-01,
            0.00000000e+00,   4.00000000e-01,   1.11022302e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]])}
  
  tables: {'FE0_f0': array([[2.77555756156e-17, 0.887298334621, 0.112701665379],
         [4.16333634234e-17, 0.5, 0.5],
         [5.55111512313e-17, 0.112701665379, 0.887298334621]], dtype=object), 'FE0_f1': array([[0.887298334621, 2.77555756156e-17, 0.112701665379],
         [0.5, 4.16333634234e-17, 0.5],
         [0.112701665379, 5.55111512313e-17, 0.887298334621]], dtype=object), 'FE0_f2': array([[0.887298334621, 0.112701665379, 0.0],
         [0.5, 0.5, 0.0],
         [0.112701665379, 0.887298334621, 0.0]], dtype=object), 'FE1_f0_C0': array([[  1.97758476e-16,   6.87298335e-01,  -8.72983346e-02,
            4.00000000e-01,  -3.46944695e-17,  -1.30104261e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  2.08166817e-16,   3.46944695e-17,   4.16333634e-17,
            1.00000000e+00,  -1.38777878e-17,   9.71445147e-17,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  1.66533454e-16,  -8.72983346e-02,   6.87298335e-01,
            4.00000000e-01,  -5.55111512e-17,   1.38777878e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f0_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            1.97758476e-16,   6.87298335e-01,  -8.72983346e-02,
            4.00000000e-01,  -3.46944695e-17,  -1.30104261e-16],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            2.08166817e-16,   3.46944695e-17,   4.16333634e-17,
            1.00000000e+00,  -1.38777878e-17,   9.71445147e-17],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            1.66533454e-16,  -8.72983346e-02,   6.87298335e-01,
            4.00000000e-01,  -5.55111512e-17,   1.38777878e-16]]), 'FE1_f2_C0': array([[  6.87298335e-01,  -8.72983346e-02,   0.00000000e+00,
           -5.55111512e-17,   8.32667268e-17,   4.00000000e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  9.71445147e-17,   8.32667268e-17,   0.00000000e+00,
            0.00000000e+00,  -2.77555756e-17,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -8.72983346e-02,   6.87298335e-01,   0.00000000e+00,
            1.11022302e-16,  -8.32667268e-17,   4.00000000e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f2_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            6.87298335e-01,  -8.72983346e-02,   0.00000000e+00,
           -5.55111512e-17,   8.32667268e-17,   4.00000000e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            9.71445147e-17,   8.32667268e-17,   0.00000000e+00,
            0.00000000e+00,  -2.77555756e-17,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -8.72983346e-02,   6.87298335e-01,   0.00000000e+00,
            1.11022302e-16,  -8.32667268e-17,   4.00000000e-01]]), 'FE1_f1_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            6.87298335e-01,   1.09287579e-16,  -8.72983346e-02,
           -2.77555756e-17,   4.00000000e-01,  -1.12757026e-16],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            2.77555756e-17,   4.85722573e-17,   4.16333634e-17,
           -2.77555756e-17,   1.00000000e+00,   6.93889390e-17],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -8.72983346e-02,   1.11022302e-16,   6.87298335e-01,
            0.00000000e+00,   4.00000000e-01,   1.11022302e-16]]), 'FE1_f1_C0': array([[  6.87298335e-01,   1.09287579e-16,  -8.72983346e-02,
           -2.77555756e-17,   4.00000000e-01,  -1.12757026e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  2.77555756e-17,   4.85722573e-17,   4.16333634e-17,
           -2.77555756e-17,   1.00000000e+00,   6.93889390e-17,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -8.72983346e-02,   1.11022302e-16,   6.87298335e-01,
            0.00000000e+00,   4.00000000e-01,   1.11022302e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]])}
  
  name_map: {}
  
  inv_name_map: {'FE0_f0': 'FE0_f0', 'FE0_f1': 'FE0_f1', 'FE0_f2': 'FE0_f2', 'FE1_f0_C0': 'FE1_f0_C0', 'FE1_f0_C1': 'FE1_f0_C1', 'FE1_f2_C0': 'FE1_f2_C0', 'FE1_f2_C1': 'FE1_f2_C1', 'FE1_f1_C1': 'FE1_f1_C1', 'FE1_f1_C0': 'FE1_f1_C0'}
  
  QG-utils, psi_tables, unique_tables:
  {'FE0_f0': array([[0.887298334621, 0.112701665379],
         [0.5, 0.5],
         [0.112701665379, 0.887298334621]], dtype=object), 'FE1_f0_C0': array([[ 0.68729833, -0.08729833,  0.4       ],
         [ 0.        ,  0.        ,  1.        ],
         [-0.08729833,  0.68729833,  0.4       ]])}
  
  QG-utils, psi_tables, name_map:
  {'FE0_f0': ('FE0_f0', (0, [1, 2]), False, False), 'FE0_f1': ('FE0_f0', (1, [0, 2]), False, False), 'FE0_f2': ('FE0_f0', (2, [0, 1]), False, False), 'FE1_f0_C0': ('FE1_f0_C0', (3, [1, 2, 3]), False, False), 'FE1_f0_C1': ('FE1_f0_C0', (4, [7, 8, 9]), False, False), 'FE1_f2_C0': ('FE1_f0_C0', (7, [0, 1, 5]), False, False), 'FE1_f2_C1': ('FE1_f0_C0', (8, [6, 7, 11]), False, False), 'FE1_f1_C1': ('FE1_f0_C0', (6, [6, 8, 10]), False, False), 'FE1_f1_C0': ('FE1_f0_C0', (5, [0, 2, 4]), False, False)}
  Transforming exterior facet integral 0
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming exterior facet integral 1
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming exterior facet integral 2
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Computing quadrature representation
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  
  QG-utils, psi_tables:
  {3: {FiniteElement('Discontinuous Lagrange', Cell('triangle', Space(2)), 0, None): {0: {(0, 0): array([[1.0, 1.0, 1.0]], dtype=object)}, 1: {(0, 0): array([[1.0, 1.0, 1.0]], dtype=object)}, 2: {(0, 0): array([[1.0, 1.0, 1.0]], dtype=object)}}, VectorElement('Lagrange', Cell('triangle', Space(2)), 2, 2, None): {0: {(0, 0): array([[[  1.97758476e-16,   2.08166817e-16,   1.66533454e-16],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  6.87298335e-01,   3.46944695e-17,  -8.72983346e-02],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -8.72983346e-02,   4.16333634e-17,   6.87298335e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  4.00000000e-01,   1.00000000e+00,   4.00000000e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -3.46944695e-17,  -1.38777878e-17,  -5.55111512e-17],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -1.30104261e-16,   9.71445147e-17,   1.38777878e-16],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  1.97758476e-16,   2.08166817e-16,   1.66533454e-16]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  6.87298335e-01,   3.46944695e-17,  -8.72983346e-02]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -8.72983346e-02,   4.16333634e-17,   6.87298335e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  4.00000000e-01,   1.00000000e+00,   4.00000000e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -3.46944695e-17,  -1.38777878e-17,  -5.55111512e-17]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -1.30104261e-16,   9.71445147e-17,   1.38777878e-16]]])}, 1: {(0, 0): array([[[  6.87298335e-01,   2.77555756e-17,  -8.72983346e-02],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  1.09287579e-16,   4.85722573e-17,   1.11022302e-16],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -8.72983346e-02,   4.16333634e-17,   6.87298335e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -2.77555756e-17,  -2.77555756e-17,   0.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  4.00000000e-01,   1.00000000e+00,   4.00000000e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -1.12757026e-16,   6.93889390e-17,   1.11022302e-16],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  6.87298335e-01,   2.77555756e-17,  -8.72983346e-02]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  1.09287579e-16,   4.85722573e-17,   1.11022302e-16]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -8.72983346e-02,   4.16333634e-17,   6.87298335e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -2.77555756e-17,  -2.77555756e-17,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  4.00000000e-01,   1.00000000e+00,   4.00000000e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -1.12757026e-16,   6.93889390e-17,   1.11022302e-16]]])}, 2: {(0, 0): array([[[  6.87298335e-01,   9.71445147e-17,  -8.72983346e-02],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -8.72983346e-02,   8.32667268e-17,   6.87298335e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -5.55111512e-17,   0.00000000e+00,   1.11022302e-16],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  8.32667268e-17,  -2.77555756e-17,  -8.32667268e-17],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  4.00000000e-01,   1.00000000e+00,   4.00000000e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  6.87298335e-01,   9.71445147e-17,  -8.72983346e-02]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -8.72983346e-02,   8.32667268e-17,   6.87298335e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -5.55111512e-17,   0.00000000e+00,   1.11022302e-16]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  8.32667268e-17,  -2.77555756e-17,  -8.32667268e-17]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  4.00000000e-01,   1.00000000e+00,   4.00000000e-01]]])}}, FiniteElement('Discontinuous Lagrange', Cell('triangle', Space(2)), 1, None): {0: {(0, 1): array([[-1.0, -1.0, -1.0],
         [0.0, 0.0, 0.0],
         [1.0, 1.0, 1.0]], dtype=object), (1, 0): array([[-1.0, -1.0, -1.0],
         [1.0, 1.0, 1.0],
         [0.0, 0.0, 0.0]], dtype=object), (0, 0): array([[2.77555756156e-17, 4.16333634234e-17, 5.55111512313e-17],
         [0.887298334621, 0.5, 0.112701665379],
         [0.112701665379, 0.5, 0.887298334621]], dtype=object)}, 1: {(0, 1): array([[-1.0, -1.0, -1.0],
         [0.0, 0.0, 0.0],
         [1.0, 1.0, 1.0]], dtype=object), (1, 0): array([[-1.0, -1.0, -1.0],
         [1.0, 1.0, 1.0],
         [0.0, 0.0, 0.0]], dtype=object), (0, 0): array([[0.887298334621, 0.5, 0.112701665379],
         [2.77555756156e-17, 4.16333634234e-17, 5.55111512313e-17],
         [0.112701665379, 0.5, 0.887298334621]], dtype=object)}, 2: {(0, 1): array([[-1.0, -1.0, -1.0],
         [0.0, 0.0, 0.0],
         [1.0, 1.0, 1.0]], dtype=object), (1, 0): array([[-1.0, -1.0, -1.0],
         [1.0, 1.0, 1.0],
         [0.0, 0.0, 0.0]], dtype=object), (0, 0): array([[0.887298334621, 0.5, 0.112701665379],
         [0.112701665379, 0.5, 0.887298334621],
         [0.0, 0.0, 0.0]], dtype=object)}}}}
  
  QG-utils, psi_tables, flat_tables:
  {'FE1_f1_D10': array([[-1.0, 1.0, 0.0],
         [-1.0, 1.0, 0.0],
         [-1.0, 1.0, 0.0]], dtype=object), 'FE2_f0_C0': array([[  1.97758476e-16,   6.87298335e-01,  -8.72983346e-02,
            4.00000000e-01,  -3.46944695e-17,  -1.30104261e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  2.08166817e-16,   3.46944695e-17,   4.16333634e-17,
            1.00000000e+00,  -1.38777878e-17,   9.71445147e-17,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  1.66533454e-16,  -8.72983346e-02,   6.87298335e-01,
            4.00000000e-01,  -5.55111512e-17,   1.38777878e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE0_f0': array([[1.0],
         [1.0],
         [1.0]], dtype=object), 'FE0_f1': array([[1.0],
         [1.0],
         [1.0]], dtype=object), 'FE0_f2': array([[1.0],
         [1.0],
         [1.0]], dtype=object), 'FE2_f2_C0': array([[  6.87298335e-01,  -8.72983346e-02,   0.00000000e+00,
           -5.55111512e-17,   8.32667268e-17,   4.00000000e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  9.71445147e-17,   8.32667268e-17,   0.00000000e+00,
            0.00000000e+00,  -2.77555756e-17,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -8.72983346e-02,   6.87298335e-01,   0.00000000e+00,
            1.11022302e-16,  -8.32667268e-17,   4.00000000e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f2_D01': array([[-1.0, 0.0, 1.0],
         [-1.0, 0.0, 1.0],
         [-1.0, 0.0, 1.0]], dtype=object), 'FE1_f1_D01': array([[-1.0, 0.0, 1.0],
         [-1.0, 0.0, 1.0],
         [-1.0, 0.0, 1.0]], dtype=object), 'FE2_f2_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            6.87298335e-01,  -8.72983346e-02,   0.00000000e+00,
           -5.55111512e-17,   8.32667268e-17,   4.00000000e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            9.71445147e-17,   8.32667268e-17,   0.00000000e+00,
            0.00000000e+00,  -2.77555756e-17,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -8.72983346e-02,   6.87298335e-01,   0.00000000e+00,
            1.11022302e-16,  -8.32667268e-17,   4.00000000e-01]]), 'FE2_f1_C0': array([[  6.87298335e-01,   1.09287579e-16,  -8.72983346e-02,
           -2.77555756e-17,   4.00000000e-01,  -1.12757026e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  2.77555756e-17,   4.85722573e-17,   4.16333634e-17,
           -2.77555756e-17,   1.00000000e+00,   6.93889390e-17,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -8.72983346e-02,   1.11022302e-16,   6.87298335e-01,
            0.00000000e+00,   4.00000000e-01,   1.11022302e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f0_D10': array([[-1.0, 1.0, 0.0],
         [-1.0, 1.0, 0.0],
         [-1.0, 1.0, 0.0]], dtype=object), 'FE1_f0_D01': array([[-1.0, 0.0, 1.0],
         [-1.0, 0.0, 1.0],
         [-1.0, 0.0, 1.0]], dtype=object), 'FE2_f1_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            6.87298335e-01,   1.09287579e-16,  -8.72983346e-02,
           -2.77555756e-17,   4.00000000e-01,  -1.12757026e-16],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            2.77555756e-17,   4.85722573e-17,   4.16333634e-17,
           -2.77555756e-17,   1.00000000e+00,   6.93889390e-17],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -8.72983346e-02,   1.11022302e-16,   6.87298335e-01,
            0.00000000e+00,   4.00000000e-01,   1.11022302e-16]]), 'FE1_f2': array([[0.887298334621, 0.112701665379, 0.0],
         [0.5, 0.5, 0.0],
         [0.112701665379, 0.887298334621, 0.0]], dtype=object), 'FE1_f1': array([[0.887298334621, 2.77555756156e-17, 0.112701665379],
         [0.5, 4.16333634234e-17, 0.5],
         [0.112701665379, 5.55111512313e-17, 0.887298334621]], dtype=object), 'FE1_f0': array([[2.77555756156e-17, 0.887298334621, 0.112701665379],
         [4.16333634234e-17, 0.5, 0.5],
         [5.55111512313e-17, 0.112701665379, 0.887298334621]], dtype=object), 'FE2_f0_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            1.97758476e-16,   6.87298335e-01,  -8.72983346e-02,
            4.00000000e-01,  -3.46944695e-17,  -1.30104261e-16],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            2.08166817e-16,   3.46944695e-17,   4.16333634e-17,
            1.00000000e+00,  -1.38777878e-17,   9.71445147e-17],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            1.66533454e-16,  -8.72983346e-02,   6.87298335e-01,
            4.00000000e-01,  -5.55111512e-17,   1.38777878e-16]]), 'FE1_f2_D10': array([[-1.0, 1.0, 0.0],
         [-1.0, 1.0, 0.0],
         [-1.0, 1.0, 0.0]], dtype=object)}
  
  tables: {'FE2_f0_C0': array([[  1.97758476e-16,   6.87298335e-01,  -8.72983346e-02,
            4.00000000e-01,  -3.46944695e-17,  -1.30104261e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  2.08166817e-16,   3.46944695e-17,   4.16333634e-17,
            1.00000000e+00,  -1.38777878e-17,   9.71445147e-17,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  1.66533454e-16,  -8.72983346e-02,   6.87298335e-01,
            4.00000000e-01,  -5.55111512e-17,   1.38777878e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE0_f0': array([[1.0],
         [1.0],
         [1.0]], dtype=object), 'FE2_f2_C0': array([[  6.87298335e-01,  -8.72983346e-02,   0.00000000e+00,
           -5.55111512e-17,   8.32667268e-17,   4.00000000e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  9.71445147e-17,   8.32667268e-17,   0.00000000e+00,
            0.00000000e+00,  -2.77555756e-17,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -8.72983346e-02,   6.87298335e-01,   0.00000000e+00,
            1.11022302e-16,  -8.32667268e-17,   4.00000000e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE2_f2_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            6.87298335e-01,  -8.72983346e-02,   0.00000000e+00,
           -5.55111512e-17,   8.32667268e-17,   4.00000000e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            9.71445147e-17,   8.32667268e-17,   0.00000000e+00,
            0.00000000e+00,  -2.77555756e-17,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -8.72983346e-02,   6.87298335e-01,   0.00000000e+00,
            1.11022302e-16,  -8.32667268e-17,   4.00000000e-01]]), 'FE2_f1_C0': array([[  6.87298335e-01,   1.09287579e-16,  -8.72983346e-02,
           -2.77555756e-17,   4.00000000e-01,  -1.12757026e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  2.77555756e-17,   4.85722573e-17,   4.16333634e-17,
           -2.77555756e-17,   1.00000000e+00,   6.93889390e-17,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -8.72983346e-02,   1.11022302e-16,   6.87298335e-01,
            0.00000000e+00,   4.00000000e-01,   1.11022302e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f0_D10': array([[-1.0, 1.0, 0.0],
         [-1.0, 1.0, 0.0],
         [-1.0, 1.0, 0.0]], dtype=object), 'FE1_f0_D01': array([[-1.0, 0.0, 1.0],
         [-1.0, 0.0, 1.0],
         [-1.0, 0.0, 1.0]], dtype=object), 'FE2_f1_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            6.87298335e-01,   1.09287579e-16,  -8.72983346e-02,
           -2.77555756e-17,   4.00000000e-01,  -1.12757026e-16],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            2.77555756e-17,   4.85722573e-17,   4.16333634e-17,
           -2.77555756e-17,   1.00000000e+00,   6.93889390e-17],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -8.72983346e-02,   1.11022302e-16,   6.87298335e-01,
            0.00000000e+00,   4.00000000e-01,   1.11022302e-16]]), 'FE1_f2': array([[0.887298334621, 0.112701665379, 0.0],
         [0.5, 0.5, 0.0],
         [0.112701665379, 0.887298334621, 0.0]], dtype=object), 'FE1_f1': array([[0.887298334621, 2.77555756156e-17, 0.112701665379],
         [0.5, 4.16333634234e-17, 0.5],
         [0.112701665379, 5.55111512313e-17, 0.887298334621]], dtype=object), 'FE1_f0': array([[2.77555756156e-17, 0.887298334621, 0.112701665379],
         [4.16333634234e-17, 0.5, 0.5],
         [5.55111512313e-17, 0.112701665379, 0.887298334621]], dtype=object), 'FE2_f0_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            1.97758476e-16,   6.87298335e-01,  -8.72983346e-02,
            4.00000000e-01,  -3.46944695e-17,  -1.30104261e-16],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            2.08166817e-16,   3.46944695e-17,   4.16333634e-17,
            1.00000000e+00,  -1.38777878e-17,   9.71445147e-17],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            1.66533454e-16,  -8.72983346e-02,   6.87298335e-01,
            4.00000000e-01,  -5.55111512e-17,   1.38777878e-16]])}
  
  name_map: {'FE0_f0': ['FE0_f1', 'FE0_f2'], 'FE1_f0_D10': ['FE1_f1_D10', 'FE1_f2_D10'], 'FE1_f0_D01': ['FE1_f1_D01', 'FE1_f2_D01']}
  
  inv_name_map: {'FE1_f1_D10': 'FE1_f0_D10', 'FE2_f1_C1': 'FE2_f1_C1', 'FE1_f0': 'FE1_f0', 'FE0_f0': 'FE0_f0', 'FE0_f1': 'FE0_f0', 'FE1_f1_D01': 'FE1_f0_D01', 'FE1_f0_D01': 'FE1_f0_D01', 'FE1_f2': 'FE1_f2', 'FE0_f2': 'FE0_f0', 'FE2_f1_C0': 'FE2_f1_C0', 'FE1_f0_D10': 'FE1_f0_D10', 'FE2_f2_C0': 'FE2_f2_C0', 'FE2_f2_C1': 'FE2_f2_C1', 'FE1_f2_D01': 'FE1_f0_D01', 'FE1_f1': 'FE1_f1', 'FE2_f0_C0': 'FE2_f0_C0', 'FE2_f0_C1': 'FE2_f0_C1', 'FE1_f2_D10': 'FE1_f0_D10'}
  
  QG-utils, psi_tables, unique_tables:
  {'FE2_f0_C0': array([[ 0.68729833, -0.08729833,  0.4       ],
         [ 0.        ,  0.        ,  1.        ],
         [-0.08729833,  0.68729833,  0.4       ]]), 'FE0_f0': array([[1.0],
         [1.0],
         [1.0]], dtype=object), 'FE1_f0_D01': array([[-1.0, 1.0],
         [-1.0, 1.0],
         [-1.0, 1.0]], dtype=object), 'FE1_f0': array([[0.887298334621, 0.112701665379],
         [0.5, 0.5],
         [0.112701665379, 0.887298334621]], dtype=object)}
  
  QG-utils, psi_tables, name_map:
  {'FE1_f1_D10': ('FE1_f0_D01', (2, [0, 1]), False, False), 'FE2_f1_C1': ('FE2_f0_C0', (8, [6, 8, 10]), False, False), 'FE1_f0': ('FE1_f0', (0, [1, 2]), False, False), 'FE0_f0': ('FE0_f0', (), False, True), 'FE0_f1': ('FE0_f0', (), False, True), 'FE1_f1_D01': ('FE1_f0_D01', (1, [0, 2]), False, False), 'FE1_f0_D01': ('FE1_f0_D01', (1, [0, 2]), False, False), 'FE1_f2': ('FE1_f0', (4, [0, 1]), False, False), 'FE0_f2': ('FE0_f0', (), False, True), 'FE2_f1_C0': ('FE2_f0_C0', (7, [0, 2, 4]), False, False), 'FE1_f0_D10': ('FE1_f0_D01', (2, [0, 1]), False, False), 'FE2_f2_C0': ('FE2_f0_C0', (9, [0, 1, 5]), False, False), 'FE2_f2_C1': ('FE2_f0_C0', (10, [6, 7, 11]), False, False), 'FE1_f2_D01': ('FE1_f0_D01', (1, [0, 2]), False, False), 'FE1_f1': ('FE1_f0', (3, [0, 2]), False, False), 'FE2_f0_C0': ('FE2_f0_C0', (5, [1, 2, 3]), False, False), 'FE2_f0_C1': ('FE2_f0_C0', (6, [7, 8, 9]), False, False), 'FE1_f2_D10': ('FE1_f0_D01', (2, [0, 1]), False, False)}
  Transforming interior facet integral (0, 0)
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming interior facet integral (0, 1)
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming interior facet integral (0, 2)
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming interior facet integral (1, 0)
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming interior facet integral (1, 1)
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming interior facet integral (1, 2)
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming interior facet integral (2, 0)
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming interior facet integral (2, 1)
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming interior facet integral (2, 2)
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Computing tensor representation
  Extracting monomial form representation from UFL form
  Reusing monomial integrand from cache
  Transforming monomial form to reference element
  Precomputing integrals on reference element
  Reusing element from cache
  9 entries computed in 0.00126 seconds
  Shape of reference tensor: (3, 3)
  Primary multi index:   rank = 1 dims = [3] indices = [[0], [1], [2]]
  Secondary multi index: rank = 1 dims = [3] indices = [[0], [1], [2]]
  Internal multi index:  rank = 0 dims = [] indices = [[]]
  Secondary multi index: rank = 1 dims = [3] indices = [[0], [1], [2]]
  External multi index:  rank = 0 dims = [] indices = [[]]
  Computing representation of forms
  
Compiler stage 2 finished in 0.486782 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Skipping FErari optimizations as requested.
  Optimising expressions for facet integral 0
  Optimising expressions for facet integral 1
  Optimising expressions for facet integral 2
  Optimising expressions for facet integral (0, 0)
  Optimising expressions for facet integral (0, 1)
  Optimising expressions for facet integral (0, 2)
  Optimising expressions for facet integral (1, 0)
  Optimising expressions for facet integral (1, 1)
  Optimising expressions for facet integral (1, 2)
  Optimising expressions for facet integral (2, 0)
  Optimising expressions for facet integral (2, 1)
  Optimising expressions for facet integral (2, 2)
  Skipping FErari optimizations as requested.
  
Compiler stage 3 finished in 0.0593569 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 4 elements
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp0
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: ss
  Removing unused variable: rr
  Removing unused variable: Y
  Removing unused variable: X
  Removing unused variable: C1
  Removing unused variable: C0
  Removing unused variable: K_11
  Removing unused variable: K_10
  Removing unused variable: K_01
  Removing unused variable: K_00
  Removing unused variable: detJ
  Removing unused variable: J_11
  Removing unused variable: J_10
  Removing unused variable: J_01
  Removing unused variable: J_00
  Removing unused variable: x
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp0
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: ss
  Removing unused variable: rr
  Removing unused variable: Y
  Removing unused variable: X
  Removing unused variable: C1
  Removing unused variable: C0
  Removing unused variable: K_11
  Removing unused variable: K_10
  Removing unused variable: K_01
  Removing unused variable: K_00
  Removing unused variable: K_11
  Removing unused variable: K_10
  Removing unused variable: K_01
  Removing unused variable: K_00
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: K_11
  Removing unused variable: K_10
  Removing unused variable: K_01
  Removing unused variable: K_00
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Generating code for 4 dofmaps
  Generating code for integrals
  Removing unused variable: circumradius
  Removing unused variable: v0v1
  Removing unused variable: v0v2
  Removing unused variable: v1v2
  Removing unused variable: volume
  Removing unused variable: K_11
  Removing unused variable: K_10
  Removing unused variable: K_01
  Removing unused variable: K_00
  Removing unused variable: detJ
  Removing unused variable: J_11
  Removing unused variable: J_10
  Removing unused variable: J_01
  Removing unused variable: J_00
  Exterior facet 0, number of operations to compute tensor: 107
  Exterior facet 1, number of operations to compute tensor: 107
  Exterior facet 2, number of operations to compute tensor: 107
  Removing unused variable: circumradius1
  Removing unused variable: v0v11
  Removing unused variable: v0v21
  Removing unused variable: v1v21
  Removing unused variable: circumradius0
  Removing unused variable: v0v10
  Removing unused variable: v0v20
  Removing unused variable: v1v20
  Removing unused variable: volume1
  Removing unused variable: volume0
  Interior facets (0, 0), number of operations to compute tensor: 1041
  Interior facets (0, 1), number of operations to compute tensor: 1041
  Interior facets (0, 2), number of operations to compute tensor: 1041
  Interior facets (1, 0), number of operations to compute tensor: 1041
  Interior facets (1, 1), number of operations to compute tensor: 1041
  Interior facets (1, 2), number of operations to compute tensor: 1041
  Interior facets (2, 0), number of operations to compute tensor: 1041
  Interior facets (2, 1), number of operations to compute tensor: 1041
  Interior facets (2, 2), number of operations to compute tensor: 1041
  Removing unused variable: K_11
  Removing unused variable: K_10
  Removing unused variable: K_01
  Removing unused variable: K_00
  Generating code for forms
  
Compiler stage 4 finished in 0.850067 seconds.

Compiler stage 4.1: Generating additional wrapper code
------------------------------------------------------
  Generating wrapper code for DOLFIN
  
Compiler stage 4.1 finished in 0.00266886 seconds.

Compiler stage 5: Formatting code
---------------------------------
  Output written to ./AdvectionDiffusion.h.
  
Compiler stage 5 finished in 0.00338697 seconds.

[1;37;32mFFC finished in 1.49255 seconds.[0m
This is FFC, the FEniCS Form Compiler, version 0.9.10.
For further information, visit http://www.fenics.org/ffc/.

Compiling element Velocity

Compiler stage 1: Analyzing form(s)
-----------------------------------
  
Compiler stage 1 finished in 0.000335932 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 2 elements
  Reusing element from cache
  Reusing element from cache
  Computing representation of 2 dofmaps
  Reusing element from cache
  Reusing element from cache
  Computing representation of integrals
  Computing representation of forms
  
Compiler stage 2 finished in 0.034307 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  
Compiler stage 3 finished in 0.000301123 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 2 elements
  Removing unused variable: K_11
  Removing unused variable: K_10
  Removing unused variable: K_01
  Removing unused variable: K_00
  Removing unused variable: K_11
  Removing unused variable: K_10
  Removing unused variable: K_01
  Removing unused variable: K_00
  Generating code for 2 dofmaps
  Generating code for integrals
  Generating code for forms
  
Compiler stage 4 finished in 0.650602 seconds.

Compiler stage 4.1: Generating additional wrapper code
------------------------------------------------------
  Generating wrapper code for DOLFIN
  
Compiler stage 4.1 finished in 0.00188088 seconds.

Compiler stage 5: Formatting code
---------------------------------
  Output written to ./Velocity.h.
  
Compiler stage 5 finished in 0.00334001 seconds.

[1;37;32mFFC finished in 0.691348 seconds.[0m
This is FFC, the FEniCS Form Compiler, version 0.9.10.
For further information, visit http://www.fenics.org/ffc/.

Compiling form Projection

Compiler stage 1: Analyzing form(s)
-----------------------------------
  
  Name:                             'a'
  Rank:                             2
  Cell:                             <triangle cell in R2>
  Topological dimension:            2
  Geometric dimension:              2
  Number of facets:                 3
  Number of coefficients:           0
  Number of cell domains:           1
  Number of exterior facet domains: 0
  Number or interior facet domains: 0
  Number of macro cell domains:     0
  Number of surface domains:        0
  Arguments:                        '[v_0, v_1]'
  Coefficients:                     '[]'
  Argument names:                   '[v, phi]'
  Coefficient names:                '[]'
  Unique elements:                  'CG1(?)'
  Unique sub elements:              'CG1(?)'
  
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Estimated cost of tensor representation: 0
  representation:    auto --> tensor
  Selecting quadrature degree based on total polynomial degree of integrand: 2
  quadrature_degree: auto --> 2
  quadrature_rule:   auto --> default
  
  Name:                             'L'
  Rank:                             1
  Cell:                             <triangle cell in R2>
  Topological dimension:            2
  Geometric dimension:              2
  Number of facets:                 3
  Number of coefficients:           1
  Number of cell domains:           1
  Number of exterior facet domains: 0
  Number or interior facet domains: 0
  Number of macro cell domains:     0
  Number of surface domains:        0
  Arguments:                        '[v_0]'
  Coefficients:                     '[w_0]'
  Argument names:                   '[v]'
  Coefficient names:                '[phi0]'
  Unique elements:                  'CG1(?), DG1(?)'
  Unique sub elements:              'CG1(?), DG1(?)'
  
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Estimated cost of tensor representation: 1
  representation:    auto --> tensor
  Selecting quadrature degree based on total polynomial degree of integrand: 2
  quadrature_degree: auto --> 2
  quadrature_rule:   auto --> default
  
Compiler stage 1 finished in 0.031219 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 2 elements
  Reusing element from cache
  Reusing element from cache
  Computing representation of 2 dofmaps
  Reusing element from cache
  Reusing element from cache
  Computing representation of integrals
  Computing tensor representation
  Extracting monomial form representation from UFL form
  Reusing monomial integrand from cache
  Transforming monomial form to reference element
  Precomputing integrals on reference element
  Reusing element from cache
  9 entries computed in 0.00137 seconds
  Shape of reference tensor: (3, 3)
  Primary multi index:   rank = 2 dims = [3, 3] indices = [[0, 0], [0, 1], [0, 2], [1, 0], [1, 1], [1, 2], [2, 0], [2, 1], [2, 2]]
  Secondary multi index: rank = 0 dims = [] indices = [[]]
  Internal multi index:  rank = 0 dims = [] indices = [[]]
  Secondary multi index: rank = 0 dims = [] indices = [[]]
  External multi index:  rank = 0 dims = [] indices = [[]]
  Computing tensor representation
  Extracting monomial form representation from UFL form
  Reusing monomial integrand from cache
  Transforming monomial form to reference element
  Precomputing integrals on reference element
  Reusing element from cache
  Reusing element from cache
  9 entries computed in 0.00306 seconds
  Shape of reference tensor: (3, 3)
  Primary multi index:   rank = 1 dims = [3] indices = [[0], [1], [2]]
  Secondary multi index: rank = 1 dims = [3] indices = [[0], [1], [2]]
  Internal multi index:  rank = 0 dims = [] indices = [[]]
  Secondary multi index: rank = 1 dims = [3] indices = [[0], [1], [2]]
  External multi index:  rank = 0 dims = [] indices = [[]]
  Computing representation of forms
  
Compiler stage 2 finished in 0.016784 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Skipping FErari optimizations as requested.
  Skipping FErari optimizations as requested.
  
Compiler stage 3 finished in 0.000854969 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 2 elements
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: K_11
  Removing unused variable: K_10
  Removing unused variable: K_01
  Removing unused variable: K_00
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: K_11
  Removing unused variable: K_10
  Removing unused variable: K_01
  Removing unused variable: K_00
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Generating code for 2 dofmaps
  Generating code for integrals
  Removing unused variable: K_11
  Removing unused variable: K_10
  Removing unused variable: K_01
  Removing unused variable: K_00
  Removing unused variable: K_11
  Removing unused variable: K_10
  Removing unused variable: K_01
  Removing unused variable: K_00
  Generating code for forms
  
Compiler stage 4 finished in 0.178787 seconds.

Compiler stage 4.1: Generating additional wrapper code
------------------------------------------------------
  Generating wrapper code for DOLFIN
  
Compiler stage 4.1 finished in 0.00238109 seconds.

Compiler stage 5: Formatting code
---------------------------------
  Output written to ./Projection.h.
  
Compiler stage 5 finished in 0.00137997 seconds.

[1;37;32mFFC finished in 0.232145 seconds.[0m
This is FFC, the FEniCS Form Compiler, version 0.9.10.
For further information, visit http://www.fenics.org/ffc/.

Compiling form AdvectionDiffusion

Compiler stage 1: Analyzing form(s)
-----------------------------------
  
  Name:                             'a'
  Rank:                             2
  Cell:                             <triangle cell in R2>
  Topological dimension:            2
  Geometric dimension:              2
  Number of facets:                 3
  Number of coefficients:           4
  Number of cell domains:           1
  Number of exterior facet domains: 1
  Number or interior facet domains: 1
  Number of macro cell domains:     0
  Number of surface domains:        0
  Arguments:                        '[v_0, v_1]'
  Coefficients:                     '[w_0, c_1, c_2, c_3]'
  Argument names:                   '[v, phi]'
  Coefficient names:                '[u, h, kappa, alpha]'
  Unique elements:                  'DG1(?), Vector<2 x CG2(?)>, DG0(?)'
  Unique sub elements:              'DG1(?), Vector<2 x CG2(?)>, DG0(?), CG2(?)'
  
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Estimated cost of tensor representation: 3
  representation:    auto --> tensor
  Selecting quadrature degree based on total polynomial degree of integrand: 3
  quadrature_degree: auto --> 3
  quadrature_rule:   auto --> default
  Extracting monomial form representation from UFL form
  Monomial extraction failed: No handler defined for terminal FacetNormal.
  Estimated cost of tensor representation: -1
  representation:    auto --> quadrature
  Selecting quadrature degree based on total polynomial degree of integrand: 4
  quadrature_degree: auto --> 4
  quadrature_rule:   auto --> default
  Extracting monomial form representation from UFL form
  Monomial extraction failed: No handler defined for terminal FacetNormal.
  Estimated cost of tensor representation: -1
  representation:    auto --> quadrature
  Selecting quadrature degree based on total polynomial degree of integrand: 4
  quadrature_degree: auto --> 4
  quadrature_rule:   auto --> default
  
  Name:                             'L'
  Rank:                             1
  Cell:                             <triangle cell in R2>
  Topological dimension:            2
  Geometric dimension:              2
  Number of facets:                 3
  Number of coefficients:           1
  Number of cell domains:           1
  Number of exterior facet domains: 0
  Number or interior facet domains: 0
  Number of macro cell domains:     0
  Number of surface domains:        0
  Arguments:                        '[v_0]'
  Coefficients:                     '[w_0]'
  Argument names:                   '[v]'
  Coefficient names:                '[f]'
  Unique elements:                  'DG1(?)'
  Unique sub elements:              'DG1(?)'
  
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Reusing element from cache
  Estimated cost of tensor representation: 1
  representation:    auto --> tensor
  Selecting quadrature degree based on total polynomial degree of integrand: 2
  quadrature_degree: auto --> 2
  quadrature_rule:   auto --> default
  
Compiler stage 1 finished in 0.089875 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 4 elements
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Computing representation of 4 dofmaps
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Computing representation of integrals
  Computing tensor representation
  Extracting monomial form representation from UFL form
  Reusing monomial integrand from cache
  Transforming monomial form to reference element
  Precomputing integrals on reference element
  Reusing element from cache
  Reusing element from cache
  36 entries computed in 0.00311 seconds
  Shape of reference tensor: (3, 3, 2, 1, 2)
  Primary multi index:   rank = 2 dims = [3, 3] indices = [[0, 0], [0, 1], [0, 2], [1, 0], [1, 1], [1, 2], [2, 0], [2, 1], [2, 2]]
  Secondary multi index: rank = 3 dims = [2, 1, 2] indices = [[0, 0, 0], [0, 0, 1], [1, 0, 0], [1, 0, 1]]
  Internal multi index:  rank = 0 dims = [] indices = [[]]
  Secondary multi index: rank = 3 dims = [2, 1, 2] indices = [[0, 0, 0], [0, 0, 1], [1, 0, 0], [1, 0, 1]]
  External multi index:  rank = 1 dims = [2] indices = [[0], [1]]
  Precomputing integrals on reference element
  Reusing element from cache
  Reusing element from cache
  432 entries computed in 0.0053 seconds
  Shape of reference tensor: (3, 3, 2, 12, 2)
  Primary multi index:   rank = 2 dims = [3, 3] indices = [[0, 0], [0, 1], [0, 2], [1, 0], [1, 1], [1, 2], [2, 0], [2, 1], [2, 2]]
  Secondary multi index: rank = 3 dims = [2, 12, 2] indices = [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [0, 2, 0], [0, 2, 1], [0, 3, 0], [0, 3, 1], [0, 4, 0], [0, 4, 1], [0, 5, 0], [0, 5, 1], [0, 6, 0], [0, 6, 1], [0, 7, 0], [0, 7, 1], [0, 8, 0], [0, 8, 1], [0, 9, 0], [0, 9, 1], [0, 10, 0], [0, 10, 1], [0, 11, 0], [0, 11, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1], [1, 2, 0], [1, 2, 1], [1, 3, 0], [1, 3, 1], [1, 4, 0], [1, 4, 1], [1, 5, 0], [1, 5, 1], [1, 6, 0], [1, 6, 1], [1, 7, 0], [1, 7, 1], [1, 8, 0], [1, 8, 1], [1, 9, 0], [1, 9, 1], [1, 10, 0], [1, 10, 1], [1, 11, 0], [1, 11, 1]]
  Internal multi index:  rank = 0 dims = [] indices = [[]]
  Secondary multi index: rank = 3 dims = [2, 12, 2] indices = [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [0, 2, 0], [0, 2, 1], [0, 3, 0], [0, 3, 1], [0, 4, 0], [0, 4, 1], [0, 5, 0], [0, 5, 1], [0, 6, 0], [0, 6, 1], [0, 7, 0], [0, 7, 1], [0, 8, 0], [0, 8, 1], [0, 9, 0], [0, 9, 1], [0, 10, 0], [0, 10, 1], [0, 11, 0], [0, 11, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1], [1, 2, 0], [1, 2, 1], [1, 3, 0], [1, 3, 1], [1, 4, 0], [1, 4, 1], [1, 5, 0], [1, 5, 1], [1, 6, 0], [1, 6, 1], [1, 7, 0], [1, 7, 1], [1, 8, 0], [1, 8, 1], [1, 9, 0], [1, 9, 1], [1, 10, 0], [1, 10, 1], [1, 11, 0], [1, 11, 1]]
  External multi index:  rank = 0 dims = [] indices = [[]]
  Computing quadrature representation
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  
  QG-utils, psi_tables:
  {3: {VectorElement('Lagrange', Cell('triangle', Space(2)), 2, 2, None): {0: {(0, 0): array([[[  1.97758476e-16,   2.08166817e-16,   1.66533454e-16],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  6.87298335e-01,   3.46944695e-17,  -8.72983346e-02],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -8.72983346e-02,   4.16333634e-17,   6.87298335e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  4.00000000e-01,   1.00000000e+00,   4.00000000e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -3.46944695e-17,  -1.38777878e-17,  -5.55111512e-17],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -1.30104261e-16,   9.71445147e-17,   1.38777878e-16],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  1.97758476e-16,   2.08166817e-16,   1.66533454e-16]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  6.87298335e-01,   3.46944695e-17,  -8.72983346e-02]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -8.72983346e-02,   4.16333634e-17,   6.87298335e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  4.00000000e-01,   1.00000000e+00,   4.00000000e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -3.46944695e-17,  -1.38777878e-17,  -5.55111512e-17]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -1.30104261e-16,   9.71445147e-17,   1.38777878e-16]]])}, 1: {(0, 0): array([[[  6.87298335e-01,   2.77555756e-17,  -8.72983346e-02],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  1.09287579e-16,   4.85722573e-17,   1.11022302e-16],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -8.72983346e-02,   4.16333634e-17,   6.87298335e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -2.77555756e-17,  -2.77555756e-17,   0.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  4.00000000e-01,   1.00000000e+00,   4.00000000e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -1.12757026e-16,   6.93889390e-17,   1.11022302e-16],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  6.87298335e-01,   2.77555756e-17,  -8.72983346e-02]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  1.09287579e-16,   4.85722573e-17,   1.11022302e-16]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -8.72983346e-02,   4.16333634e-17,   6.87298335e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -2.77555756e-17,  -2.77555756e-17,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  4.00000000e-01,   1.00000000e+00,   4.00000000e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -1.12757026e-16,   6.93889390e-17,   1.11022302e-16]]])}, 2: {(0, 0): array([[[  6.87298335e-01,   9.71445147e-17,  -8.72983346e-02],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -8.72983346e-02,   8.32667268e-17,   6.87298335e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -5.55111512e-17,   0.00000000e+00,   1.11022302e-16],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  8.32667268e-17,  -2.77555756e-17,  -8.32667268e-17],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  4.00000000e-01,   1.00000000e+00,   4.00000000e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  6.87298335e-01,   9.71445147e-17,  -8.72983346e-02]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -8.72983346e-02,   8.32667268e-17,   6.87298335e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -5.55111512e-17,   0.00000000e+00,   1.11022302e-16]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  8.32667268e-17,  -2.77555756e-17,  -8.32667268e-17]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  4.00000000e-01,   1.00000000e+00,   4.00000000e-01]]])}}, FiniteElement('Discontinuous Lagrange', Cell('triangle', Space(2)), 1, None): {0: {(0, 0): array([[2.77555756156e-17, 4.16333634234e-17, 5.55111512313e-17],
         [0.887298334621, 0.5, 0.112701665379],
         [0.112701665379, 0.5, 0.887298334621]], dtype=object)}, 1: {(0, 0): array([[0.887298334621, 0.5, 0.112701665379],
         [2.77555756156e-17, 4.16333634234e-17, 5.55111512313e-17],
         [0.112701665379, 0.5, 0.887298334621]], dtype=object)}, 2: {(0, 0): array([[0.887298334621, 0.5, 0.112701665379],
         [0.112701665379, 0.5, 0.887298334621],
         [0.0, 0.0, 0.0]], dtype=object)}}}}
  
  QG-utils, psi_tables, flat_tables:
  {'FE0_f0': array([[2.77555756156e-17, 0.887298334621, 0.112701665379],
         [4.16333634234e-17, 0.5, 0.5],
         [5.55111512313e-17, 0.112701665379, 0.887298334621]], dtype=object), 'FE0_f1': array([[0.887298334621, 2.77555756156e-17, 0.112701665379],
         [0.5, 4.16333634234e-17, 0.5],
         [0.112701665379, 5.55111512313e-17, 0.887298334621]], dtype=object), 'FE0_f2': array([[0.887298334621, 0.112701665379, 0.0],
         [0.5, 0.5, 0.0],
         [0.112701665379, 0.887298334621, 0.0]], dtype=object), 'FE1_f0_C0': array([[  1.97758476e-16,   6.87298335e-01,  -8.72983346e-02,
            4.00000000e-01,  -3.46944695e-17,  -1.30104261e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  2.08166817e-16,   3.46944695e-17,   4.16333634e-17,
            1.00000000e+00,  -1.38777878e-17,   9.71445147e-17,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  1.66533454e-16,  -8.72983346e-02,   6.87298335e-01,
            4.00000000e-01,  -5.55111512e-17,   1.38777878e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f0_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            1.97758476e-16,   6.87298335e-01,  -8.72983346e-02,
            4.00000000e-01,  -3.46944695e-17,  -1.30104261e-16],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            2.08166817e-16,   3.46944695e-17,   4.16333634e-17,
            1.00000000e+00,  -1.38777878e-17,   9.71445147e-17],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            1.66533454e-16,  -8.72983346e-02,   6.87298335e-01,
            4.00000000e-01,  -5.55111512e-17,   1.38777878e-16]]), 'FE1_f2_C0': array([[  6.87298335e-01,  -8.72983346e-02,   0.00000000e+00,
           -5.55111512e-17,   8.32667268e-17,   4.00000000e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  9.71445147e-17,   8.32667268e-17,   0.00000000e+00,
            0.00000000e+00,  -2.77555756e-17,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -8.72983346e-02,   6.87298335e-01,   0.00000000e+00,
            1.11022302e-16,  -8.32667268e-17,   4.00000000e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f2_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            6.87298335e-01,  -8.72983346e-02,   0.00000000e+00,
           -5.55111512e-17,   8.32667268e-17,   4.00000000e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            9.71445147e-17,   8.32667268e-17,   0.00000000e+00,
            0.00000000e+00,  -2.77555756e-17,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -8.72983346e-02,   6.87298335e-01,   0.00000000e+00,
            1.11022302e-16,  -8.32667268e-17,   4.00000000e-01]]), 'FE1_f1_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            6.87298335e-01,   1.09287579e-16,  -8.72983346e-02,
           -2.77555756e-17,   4.00000000e-01,  -1.12757026e-16],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            2.77555756e-17,   4.85722573e-17,   4.16333634e-17,
           -2.77555756e-17,   1.00000000e+00,   6.93889390e-17],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -8.72983346e-02,   1.11022302e-16,   6.87298335e-01,
            0.00000000e+00,   4.00000000e-01,   1.11022302e-16]]), 'FE1_f1_C0': array([[  6.87298335e-01,   1.09287579e-16,  -8.72983346e-02,
           -2.77555756e-17,   4.00000000e-01,  -1.12757026e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  2.77555756e-17,   4.85722573e-17,   4.16333634e-17,
           -2.77555756e-17,   1.00000000e+00,   6.93889390e-17,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -8.72983346e-02,   1.11022302e-16,   6.87298335e-01,
            0.00000000e+00,   4.00000000e-01,   1.11022302e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]])}
  
  tables: {'FE0_f0': array([[2.77555756156e-17, 0.887298334621, 0.112701665379],
         [4.16333634234e-17, 0.5, 0.5],
         [5.55111512313e-17, 0.112701665379, 0.887298334621]], dtype=object), 'FE0_f1': array([[0.887298334621, 2.77555756156e-17, 0.112701665379],
         [0.5, 4.16333634234e-17, 0.5],
         [0.112701665379, 5.55111512313e-17, 0.887298334621]], dtype=object), 'FE0_f2': array([[0.887298334621, 0.112701665379, 0.0],
         [0.5, 0.5, 0.0],
         [0.112701665379, 0.887298334621, 0.0]], dtype=object), 'FE1_f0_C0': array([[  1.97758476e-16,   6.87298335e-01,  -8.72983346e-02,
            4.00000000e-01,  -3.46944695e-17,  -1.30104261e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  2.08166817e-16,   3.46944695e-17,   4.16333634e-17,
            1.00000000e+00,  -1.38777878e-17,   9.71445147e-17,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  1.66533454e-16,  -8.72983346e-02,   6.87298335e-01,
            4.00000000e-01,  -5.55111512e-17,   1.38777878e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f0_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            1.97758476e-16,   6.87298335e-01,  -8.72983346e-02,
            4.00000000e-01,  -3.46944695e-17,  -1.30104261e-16],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            2.08166817e-16,   3.46944695e-17,   4.16333634e-17,
            1.00000000e+00,  -1.38777878e-17,   9.71445147e-17],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            1.66533454e-16,  -8.72983346e-02,   6.87298335e-01,
            4.00000000e-01,  -5.55111512e-17,   1.38777878e-16]]), 'FE1_f2_C0': array([[  6.87298335e-01,  -8.72983346e-02,   0.00000000e+00,
           -5.55111512e-17,   8.32667268e-17,   4.00000000e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  9.71445147e-17,   8.32667268e-17,   0.00000000e+00,
            0.00000000e+00,  -2.77555756e-17,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -8.72983346e-02,   6.87298335e-01,   0.00000000e+00,
            1.11022302e-16,  -8.32667268e-17,   4.00000000e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f2_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            6.87298335e-01,  -8.72983346e-02,   0.00000000e+00,
           -5.55111512e-17,   8.32667268e-17,   4.00000000e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            9.71445147e-17,   8.32667268e-17,   0.00000000e+00,
            0.00000000e+00,  -2.77555756e-17,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -8.72983346e-02,   6.87298335e-01,   0.00000000e+00,
            1.11022302e-16,  -8.32667268e-17,   4.00000000e-01]]), 'FE1_f1_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            6.87298335e-01,   1.09287579e-16,  -8.72983346e-02,
           -2.77555756e-17,   4.00000000e-01,  -1.12757026e-16],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            2.77555756e-17,   4.85722573e-17,   4.16333634e-17,
           -2.77555756e-17,   1.00000000e+00,   6.93889390e-17],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -8.72983346e-02,   1.11022302e-16,   6.87298335e-01,
            0.00000000e+00,   4.00000000e-01,   1.11022302e-16]]), 'FE1_f1_C0': array([[  6.87298335e-01,   1.09287579e-16,  -8.72983346e-02,
           -2.77555756e-17,   4.00000000e-01,  -1.12757026e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  2.77555756e-17,   4.85722573e-17,   4.16333634e-17,
           -2.77555756e-17,   1.00000000e+00,   6.93889390e-17,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -8.72983346e-02,   1.11022302e-16,   6.87298335e-01,
            0.00000000e+00,   4.00000000e-01,   1.11022302e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]])}
  
  name_map: {}
  
  inv_name_map: {'FE0_f0': 'FE0_f0', 'FE0_f1': 'FE0_f1', 'FE0_f2': 'FE0_f2', 'FE1_f0_C0': 'FE1_f0_C0', 'FE1_f0_C1': 'FE1_f0_C1', 'FE1_f2_C0': 'FE1_f2_C0', 'FE1_f2_C1': 'FE1_f2_C1', 'FE1_f1_C1': 'FE1_f1_C1', 'FE1_f1_C0': 'FE1_f1_C0'}
  
  QG-utils, psi_tables, unique_tables:
  {'FE0_f0': array([[0.887298334621, 0.112701665379],
         [0.5, 0.5],
         [0.112701665379, 0.887298334621]], dtype=object), 'FE1_f0_C0': array([[ 0.68729833, -0.08729833,  0.4       ],
         [ 0.        ,  0.        ,  1.        ],
         [-0.08729833,  0.68729833,  0.4       ]])}
  
  QG-utils, psi_tables, name_map:
  {'FE0_f0': ('FE0_f0', (0, [1, 2]), False, False), 'FE0_f1': ('FE0_f0', (1, [0, 2]), False, False), 'FE0_f2': ('FE0_f0', (2, [0, 1]), False, False), 'FE1_f0_C0': ('FE1_f0_C0', (3, [1, 2, 3]), False, False), 'FE1_f0_C1': ('FE1_f0_C0', (4, [7, 8, 9]), False, False), 'FE1_f2_C0': ('FE1_f0_C0', (7, [0, 1, 5]), False, False), 'FE1_f2_C1': ('FE1_f0_C0', (8, [6, 7, 11]), False, False), 'FE1_f1_C1': ('FE1_f0_C0', (6, [6, 8, 10]), False, False), 'FE1_f1_C0': ('FE1_f0_C0', (5, [0, 2, 4]), False, False)}
  Transforming exterior facet integral 0
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming exterior facet integral 1
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming exterior facet integral 2
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Computing quadrature representation
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  
  QG-utils, psi_tables:
  {3: {FiniteElement('Discontinuous Lagrange', Cell('triangle', Space(2)), 0, None): {0: {(0, 0): array([[1.0, 1.0, 1.0]], dtype=object)}, 1: {(0, 0): array([[1.0, 1.0, 1.0]], dtype=object)}, 2: {(0, 0): array([[1.0, 1.0, 1.0]], dtype=object)}}, VectorElement('Lagrange', Cell('triangle', Space(2)), 2, 2, None): {0: {(0, 0): array([[[  1.97758476e-16,   2.08166817e-16,   1.66533454e-16],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  6.87298335e-01,   3.46944695e-17,  -8.72983346e-02],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -8.72983346e-02,   4.16333634e-17,   6.87298335e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  4.00000000e-01,   1.00000000e+00,   4.00000000e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -3.46944695e-17,  -1.38777878e-17,  -5.55111512e-17],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -1.30104261e-16,   9.71445147e-17,   1.38777878e-16],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  1.97758476e-16,   2.08166817e-16,   1.66533454e-16]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  6.87298335e-01,   3.46944695e-17,  -8.72983346e-02]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -8.72983346e-02,   4.16333634e-17,   6.87298335e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  4.00000000e-01,   1.00000000e+00,   4.00000000e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -3.46944695e-17,  -1.38777878e-17,  -5.55111512e-17]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -1.30104261e-16,   9.71445147e-17,   1.38777878e-16]]])}, 1: {(0, 0): array([[[  6.87298335e-01,   2.77555756e-17,  -8.72983346e-02],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  1.09287579e-16,   4.85722573e-17,   1.11022302e-16],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -8.72983346e-02,   4.16333634e-17,   6.87298335e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -2.77555756e-17,  -2.77555756e-17,   0.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  4.00000000e-01,   1.00000000e+00,   4.00000000e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -1.12757026e-16,   6.93889390e-17,   1.11022302e-16],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  6.87298335e-01,   2.77555756e-17,  -8.72983346e-02]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  1.09287579e-16,   4.85722573e-17,   1.11022302e-16]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -8.72983346e-02,   4.16333634e-17,   6.87298335e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -2.77555756e-17,  -2.77555756e-17,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  4.00000000e-01,   1.00000000e+00,   4.00000000e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -1.12757026e-16,   6.93889390e-17,   1.11022302e-16]]])}, 2: {(0, 0): array([[[  6.87298335e-01,   9.71445147e-17,  -8.72983346e-02],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -8.72983346e-02,   8.32667268e-17,   6.87298335e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -5.55111512e-17,   0.00000000e+00,   1.11022302e-16],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  8.32667268e-17,  -2.77555756e-17,  -8.32667268e-17],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  4.00000000e-01,   1.00000000e+00,   4.00000000e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  6.87298335e-01,   9.71445147e-17,  -8.72983346e-02]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -8.72983346e-02,   8.32667268e-17,   6.87298335e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -5.55111512e-17,   0.00000000e+00,   1.11022302e-16]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  8.32667268e-17,  -2.77555756e-17,  -8.32667268e-17]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  4.00000000e-01,   1.00000000e+00,   4.00000000e-01]]])}}, FiniteElement('Discontinuous Lagrange', Cell('triangle', Space(2)), 1, None): {0: {(0, 1): array([[-1.0, -1.0, -1.0],
         [0.0, 0.0, 0.0],
         [1.0, 1.0, 1.0]], dtype=object), (1, 0): array([[-1.0, -1.0, -1.0],
         [1.0, 1.0, 1.0],
         [0.0, 0.0, 0.0]], dtype=object), (0, 0): array([[2.77555756156e-17, 4.16333634234e-17, 5.55111512313e-17],
         [0.887298334621, 0.5, 0.112701665379],
         [0.112701665379, 0.5, 0.887298334621]], dtype=object)}, 1: {(0, 1): array([[-1.0, -1.0, -1.0],
         [0.0, 0.0, 0.0],
         [1.0, 1.0, 1.0]], dtype=object), (1, 0): array([[-1.0, -1.0, -1.0],
         [1.0, 1.0, 1.0],
         [0.0, 0.0, 0.0]], dtype=object), (0, 0): array([[0.887298334621, 0.5, 0.112701665379],
         [2.77555756156e-17, 4.16333634234e-17, 5.55111512313e-17],
         [0.112701665379, 0.5, 0.887298334621]], dtype=object)}, 2: {(0, 1): array([[-1.0, -1.0, -1.0],
         [0.0, 0.0, 0.0],
         [1.0, 1.0, 1.0]], dtype=object), (1, 0): array([[-1.0, -1.0, -1.0],
         [1.0, 1.0, 1.0],
         [0.0, 0.0, 0.0]], dtype=object), (0, 0): array([[0.887298334621, 0.5, 0.112701665379],
         [0.112701665379, 0.5, 0.887298334621],
         [0.0, 0.0, 0.0]], dtype=object)}}}}
  
  QG-utils, psi_tables, flat_tables:
  {'FE1_f1_D10': array([[-1.0, 1.0, 0.0],
         [-1.0, 1.0, 0.0],
         [-1.0, 1.0, 0.0]], dtype=object), 'FE2_f0_C0': array([[  1.97758476e-16,   6.87298335e-01,  -8.72983346e-02,
            4.00000000e-01,  -3.46944695e-17,  -1.30104261e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  2.08166817e-16,   3.46944695e-17,   4.16333634e-17,
            1.00000000e+00,  -1.38777878e-17,   9.71445147e-17,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  1.66533454e-16,  -8.72983346e-02,   6.87298335e-01,
            4.00000000e-01,  -5.55111512e-17,   1.38777878e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE0_f0': array([[1.0],
         [1.0],
         [1.0]], dtype=object), 'FE0_f1': array([[1.0],
         [1.0],
         [1.0]], dtype=object), 'FE0_f2': array([[1.0],
         [1.0],
         [1.0]], dtype=object), 'FE2_f2_C0': array([[  6.87298335e-01,  -8.72983346e-02,   0.00000000e+00,
           -5.55111512e-17,   8.32667268e-17,   4.00000000e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  9.71445147e-17,   8.32667268e-17,   0.00000000e+00,
            0.00000000e+00,  -2.77555756e-17,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -8.72983346e-02,   6.87298335e-01,   0.00000000e+00,
            1.11022302e-16,  -8.32667268e-17,   4.00000000e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f2_D01': array([[-1.0, 0.0, 1.0],
         [-1.0, 0.0, 1.0],
         [-1.0, 0.0, 1.0]], dtype=object), 'FE1_f1_D01': array([[-1.0, 0.0, 1.0],
         [-1.0, 0.0, 1.0],
         [-1.0, 0.0, 1.0]], dtype=object), 'FE2_f2_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            6.87298335e-01,  -8.72983346e-02,   0.00000000e+00,
           -5.55111512e-17,   8.32667268e-17,   4.00000000e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            9.71445147e-17,   8.32667268e-17,   0.00000000e+00,
            0.00000000e+00,  -2.77555756e-17,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -8.72983346e-02,   6.87298335e-01,   0.00000000e+00,
            1.11022302e-16,  -8.32667268e-17,   4.00000000e-01]]), 'FE2_f1_C0': array([[  6.87298335e-01,   1.09287579e-16,  -8.72983346e-02,
           -2.77555756e-17,   4.00000000e-01,  -1.12757026e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  2.77555756e-17,   4.85722573e-17,   4.16333634e-17,
           -2.77555756e-17,   1.00000000e+00,   6.93889390e-17,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -8.72983346e-02,   1.11022302e-16,   6.87298335e-01,
            0.00000000e+00,   4.00000000e-01,   1.11022302e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f0_D10': array([[-1.0, 1.0, 0.0],
         [-1.0, 1.0, 0.0],
         [-1.0, 1.0, 0.0]], dtype=object), 'FE1_f0_D01': array([[-1.0, 0.0, 1.0],
         [-1.0, 0.0, 1.0],
         [-1.0, 0.0, 1.0]], dtype=object), 'FE2_f1_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            6.87298335e-01,   1.09287579e-16,  -8.72983346e-02,
           -2.77555756e-17,   4.00000000e-01,  -1.12757026e-16],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            2.77555756e-17,   4.85722573e-17,   4.16333634e-17,
           -2.77555756e-17,   1.00000000e+00,   6.93889390e-17],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -8.72983346e-02,   1.11022302e-16,   6.87298335e-01,
            0.00000000e+00,   4.00000000e-01,   1.11022302e-16]]), 'FE1_f2': array([[0.887298334621, 0.112701665379, 0.0],
         [0.5, 0.5, 0.0],
         [0.112701665379, 0.887298334621, 0.0]], dtype=object), 'FE1_f1': array([[0.887298334621, 2.77555756156e-17, 0.112701665379],
         [0.5, 4.16333634234e-17, 0.5],
         [0.112701665379, 5.55111512313e-17, 0.887298334621]], dtype=object), 'FE1_f0': array([[2.77555756156e-17, 0.887298334621, 0.112701665379],
         [4.16333634234e-17, 0.5, 0.5],
         [5.55111512313e-17, 0.112701665379, 0.887298334621]], dtype=object), 'FE2_f0_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            1.97758476e-16,   6.87298335e-01,  -8.72983346e-02,
            4.00000000e-01,  -3.46944695e-17,  -1.30104261e-16],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            2.08166817e-16,   3.46944695e-17,   4.16333634e-17,
            1.00000000e+00,  -1.38777878e-17,   9.71445147e-17],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            1.66533454e-16,  -8.72983346e-02,   6.87298335e-01,
            4.00000000e-01,  -5.55111512e-17,   1.38777878e-16]]), 'FE1_f2_D10': array([[-1.0, 1.0, 0.0],
         [-1.0, 1.0, 0.0],
         [-1.0, 1.0, 0.0]], dtype=object)}
  
  tables: {'FE2_f0_C0': array([[  1.97758476e-16,   6.87298335e-01,  -8.72983346e-02,
            4.00000000e-01,  -3.46944695e-17,  -1.30104261e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  2.08166817e-16,   3.46944695e-17,   4.16333634e-17,
            1.00000000e+00,  -1.38777878e-17,   9.71445147e-17,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  1.66533454e-16,  -8.72983346e-02,   6.87298335e-01,
            4.00000000e-01,  -5.55111512e-17,   1.38777878e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE0_f0': array([[1.0],
         [1.0],
         [1.0]], dtype=object), 'FE2_f2_C0': array([[  6.87298335e-01,  -8.72983346e-02,   0.00000000e+00,
           -5.55111512e-17,   8.32667268e-17,   4.00000000e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  9.71445147e-17,   8.32667268e-17,   0.00000000e+00,
            0.00000000e+00,  -2.77555756e-17,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -8.72983346e-02,   6.87298335e-01,   0.00000000e+00,
            1.11022302e-16,  -8.32667268e-17,   4.00000000e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE2_f2_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            6.87298335e-01,  -8.72983346e-02,   0.00000000e+00,
           -5.55111512e-17,   8.32667268e-17,   4.00000000e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            9.71445147e-17,   8.32667268e-17,   0.00000000e+00,
            0.00000000e+00,  -2.77555756e-17,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -8.72983346e-02,   6.87298335e-01,   0.00000000e+00,
            1.11022302e-16,  -8.32667268e-17,   4.00000000e-01]]), 'FE2_f1_C0': array([[  6.87298335e-01,   1.09287579e-16,  -8.72983346e-02,
           -2.77555756e-17,   4.00000000e-01,  -1.12757026e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  2.77555756e-17,   4.85722573e-17,   4.16333634e-17,
           -2.77555756e-17,   1.00000000e+00,   6.93889390e-17,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -8.72983346e-02,   1.11022302e-16,   6.87298335e-01,
            0.00000000e+00,   4.00000000e-01,   1.11022302e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f0_D10': array([[-1.0, 1.0, 0.0],
         [-1.0, 1.0, 0.0],
         [-1.0, 1.0, 0.0]], dtype=object), 'FE1_f0_D01': array([[-1.0, 0.0, 1.0],
         [-1.0, 0.0, 1.0],
         [-1.0, 0.0, 1.0]], dtype=object), 'FE2_f1_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            6.87298335e-01,   1.09287579e-16,  -8.72983346e-02,
           -2.77555756e-17,   4.00000000e-01,  -1.12757026e-16],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            2.77555756e-17,   4.85722573e-17,   4.16333634e-17,
           -2.77555756e-17,   1.00000000e+00,   6.93889390e-17],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -8.72983346e-02,   1.11022302e-16,   6.87298335e-01,
            0.00000000e+00,   4.00000000e-01,   1.11022302e-16]]), 'FE1_f2': array([[0.887298334621, 0.112701665379, 0.0],
         [0.5, 0.5, 0.0],
         [0.112701665379, 0.887298334621, 0.0]], dtype=object), 'FE1_f1': array([[0.887298334621, 2.77555756156e-17, 0.112701665379],
         [0.5, 4.16333634234e-17, 0.5],
         [0.112701665379, 5.55111512313e-17, 0.887298334621]], dtype=object), 'FE1_f0': array([[2.77555756156e-17, 0.887298334621, 0.112701665379],
         [4.16333634234e-17, 0.5, 0.5],
         [5.55111512313e-17, 0.112701665379, 0.887298334621]], dtype=object), 'FE2_f0_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            1.97758476e-16,   6.87298335e-01,  -8.72983346e-02,
            4.00000000e-01,  -3.46944695e-17,  -1.30104261e-16],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            2.08166817e-16,   3.46944695e-17,   4.16333634e-17,
            1.00000000e+00,  -1.38777878e-17,   9.71445147e-17],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            1.66533454e-16,  -8.72983346e-02,   6.87298335e-01,
            4.00000000e-01,  -5.55111512e-17,   1.38777878e-16]])}
  
  name_map: {'FE0_f0': ['FE0_f1', 'FE0_f2'], 'FE1_f0_D10': ['FE1_f1_D10', 'FE1_f2_D10'], 'FE1_f0_D01': ['FE1_f1_D01', 'FE1_f2_D01']}
  
  inv_name_map: {'FE1_f1_D10': 'FE1_f0_D10', 'FE2_f1_C1': 'FE2_f1_C1', 'FE1_f0': 'FE1_f0', 'FE0_f0': 'FE0_f0', 'FE0_f1': 'FE0_f0', 'FE1_f1_D01': 'FE1_f0_D01', 'FE1_f0_D01': 'FE1_f0_D01', 'FE1_f2': 'FE1_f2', 'FE0_f2': 'FE0_f0', 'FE2_f1_C0': 'FE2_f1_C0', 'FE1_f0_D10': 'FE1_f0_D10', 'FE2_f2_C0': 'FE2_f2_C0', 'FE2_f2_C1': 'FE2_f2_C1', 'FE1_f2_D01': 'FE1_f0_D01', 'FE1_f1': 'FE1_f1', 'FE2_f0_C0': 'FE2_f0_C0', 'FE2_f0_C1': 'FE2_f0_C1', 'FE1_f2_D10': 'FE1_f0_D10'}
  
  QG-utils, psi_tables, unique_tables:
  {'FE2_f0_C0': array([[ 0.68729833, -0.08729833,  0.4       ],
         [ 0.        ,  0.        ,  1.        ],
         [-0.08729833,  0.68729833,  0.4       ]]), 'FE0_f0': array([[1.0],
         [1.0],
         [1.0]], dtype=object), 'FE1_f0_D01': array([[-1.0, 1.0],
         [-1.0, 1.0],
         [-1.0, 1.0]], dtype=object), 'FE1_f0': array([[0.887298334621, 0.112701665379],
         [0.5, 0.5],
         [0.112701665379, 0.887298334621]], dtype=object)}
  
  QG-utils, psi_tables, name_map:
  {'FE1_f1_D10': ('FE1_f0_D01', (2, [0, 1]), False, False), 'FE2_f1_C1': ('FE2_f0_C0', (8, [6, 8, 10]), False, False), 'FE1_f0': ('FE1_f0', (0, [1, 2]), False, False), 'FE0_f0': ('FE0_f0', (), False, True), 'FE0_f1': ('FE0_f0', (), False, True), 'FE1_f1_D01': ('FE1_f0_D01', (1, [0, 2]), False, False), 'FE1_f0_D01': ('FE1_f0_D01', (1, [0, 2]), False, False), 'FE1_f2': ('FE1_f0', (4, [0, 1]), False, False), 'FE0_f2': ('FE0_f0', (), False, True), 'FE2_f1_C0': ('FE2_f0_C0', (7, [0, 2, 4]), False, False), 'FE1_f0_D10': ('FE1_f0_D01', (2, [0, 1]), False, False), 'FE2_f2_C0': ('FE2_f0_C0', (9, [0, 1, 5]), False, False), 'FE2_f2_C1': ('FE2_f0_C0', (10, [6, 7, 11]), False, False), 'FE1_f2_D01': ('FE1_f0_D01', (1, [0, 2]), False, False), 'FE1_f1': ('FE1_f0', (3, [0, 2]), False, False), 'FE2_f0_C0': ('FE2_f0_C0', (5, [1, 2, 3]), False, False), 'FE2_f0_C1': ('FE2_f0_C0', (6, [7, 8, 9]), False, False), 'FE1_f2_D10': ('FE1_f0_D01', (2, [0, 1]), False, False)}
  Transforming interior facet integral (0, 0)
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming interior facet integral (0, 1)
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming interior facet integral (0, 2)
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming interior facet integral (1, 0)
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming interior facet integral (1, 1)
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming interior facet integral (1, 2)
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming interior facet integral (2, 0)
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming interior facet integral (2, 1)
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming interior facet integral (2, 2)
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Computing tensor representation
  Extracting monomial form representation from UFL form
  Reusing monomial integrand from cache
  Transforming monomial form to reference element
  Precomputing integrals on reference element
  Reusing element from cache
  9 entries computed in 0.00132 seconds
  Shape of reference tensor: (3, 3)
  Primary multi index:   rank = 1 dims = [3] indices = [[0], [1], [2]]
  Secondary multi index: rank = 1 dims = [3] indices = [[0], [1], [2]]
  Internal multi index:  rank = 0 dims = [] indices = [[]]
  Secondary multi index: rank = 1 dims = [3] indices = [[0], [1], [2]]
  External multi index:  rank = 0 dims = [] indices = [[]]
  Computing representation of forms
  
Compiler stage 2 finished in 0.48552 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Skipping FErari optimizations as requested.
  Optimising expressions for facet integral 0
  Optimising expressions for facet integral 1
  Optimising expressions for facet integral 2
  Optimising expressions for facet integral (0, 0)
  Optimising expressions for facet integral (0, 1)
  Optimising expressions for facet integral (0, 2)
  Optimising expressions for facet integral (1, 0)
  Optimising expressions for facet integral (1, 1)
  Optimising expressions for facet integral (1, 2)
  Optimising expressions for facet integral (2, 0)
  Optimising expressions for facet integral (2, 1)
  Optimising expressions for facet integral (2, 2)
  Skipping FErari optimizations as requested.
  
Compiler stage 3 finished in 0.0579998 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 4 elements
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp0
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: ss
  Removing unused variable: rr
  Removing unused variable: Y
  Removing unused variable: X
  Removing unused variable: C1
  Removing unused variable: C0
  Removing unused variable: K_11
  Removing unused variable: K_10
  Removing unused variable: K_01
  Removing unused variable: K_00
  Removing unused variable: detJ
  Removing unused variable: J_11
  Removing unused variable: J_10
  Removing unused variable: J_01
  Removing unused variable: J_00
  Removing unused variable: x
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp0
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: ss
  Removing unused variable: rr
  Removing unused variable: Y
  Removing unused variable: X
  Removing unused variable: C1
  Removing unused variable: C0
  Removing unused variable: K_11
  Removing unused variable: K_10
  Removing unused variable: K_01
  Removing unused variable: K_00
  Removing unused variable: K_11
  Removing unused variable: K_10
  Removing unused variable: K_01
  Removing unused variable: K_00
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: K_11
  Removing unused variable: K_10
  Removing unused variable: K_01
  Removing unused variable: K_00
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Generating code for 4 dofmaps
  Generating code for integrals
  Removing unused variable: circumradius
  Removing unused variable: v0v1
  Removing unused variable: v0v2
  Removing unused variable: v1v2
  Removing unused variable: volume
  Removing unused variable: K_11
  Removing unused variable: K_10
  Removing unused variable: K_01
  Removing unused variable: K_00
  Removing unused variable: detJ
  Removing unused variable: J_11
  Removing unused variable: J_10
  Removing unused variable: J_01
  Removing unused variable: J_00
  Exterior facet 0, number of operations to compute tensor: 107
  Exterior facet 1, number of operations to compute tensor: 107
  Exterior facet 2, number of operations to compute tensor: 107
  Removing unused variable: circumradius1
  Removing unused variable: v0v11
  Removing unused variable: v0v21
  Removing unused variable: v1v21
  Removing unused variable: circumradius0
  Removing unused variable: v0v10
  Removing unused variable: v0v20
  Removing unused variable: v1v20
  Removing unused variable: volume1
  Removing unused variable: volume0
  Interior facets (0, 0), number of operations to compute tensor: 1041
  Interior facets (0, 1), number of operations to compute tensor: 1041
  Interior facets (0, 2), number of operations to compute tensor: 1041
  Interior facets (1, 0), number of operations to compute tensor: 1041
  Interior facets (1, 1), number of operations to compute tensor: 1041
  Interior facets (1, 2), number of operations to compute tensor: 1041
  Interior facets (2, 0), number of operations to compute tensor: 1041
  Interior facets (2, 1), number of operations to compute tensor: 1041
  Interior facets (2, 2), number of operations to compute tensor: 1041
  Removing unused variable: K_11
  Removing unused variable: K_10
  Removing unused variable: K_01
  Removing unused variable: K_00
  Generating code for forms
  
Compiler stage 4 finished in 0.861968 seconds.

Compiler stage 4.1: Generating additional wrapper code
------------------------------------------------------
  Generating wrapper code for DOLFIN
  
Compiler stage 4.1 finished in 0.00269794 seconds.

Compiler stage 5: Formatting code
---------------------------------
  Output written to ./AdvectionDiffusion.h.
  
Compiler stage 5 finished in 0.00330615 seconds.

[1;37;32mFFC finished in 1.50192 seconds.[0m
This is FFC, the FEniCS Form Compiler, version 0.9.10.
For further information, visit http://www.fenics.org/ffc/.

Compiling element Velocity

Compiler stage 1: Analyzing form(s)
-----------------------------------
  
Compiler stage 1 finished in 0.000339985 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 2 elements
  Reusing element from cache
  Reusing element from cache
  Computing representation of 2 dofmaps
  Reusing element from cache
  Reusing element from cache
  Computing representation of integrals
  Computing representation of forms
  
Compiler stage 2 finished in 0.034657 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  
Compiler stage 3 finished in 0.000252962 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 2 elements
  Removing unused variable: K_11
  Removing unused variable: K_10
  Removing unused variable: K_01
  Removing unused variable: K_00
  Removing unused variable: K_11
  Removing unused variable: K_10
  Removing unused variable: K_01
  Removing unused variable: K_00
  Generating code for 2 dofmaps
  Generating code for integrals
  Generating code for forms
  
Compiler stage 4 finished in 0.683441 seconds.

Compiler stage 4.1: Generating additional wrapper code
------------------------------------------------------
  Generating wrapper code for DOLFIN
  
Compiler stage 4.1 finished in 0.00183988 seconds.

Compiler stage 5: Formatting code
---------------------------------
  Output written to ./Velocity.h.
  
Compiler stage 5 finished in 0.0023489 seconds.

[1;37;32mFFC finished in 0.723453 seconds.[0m
