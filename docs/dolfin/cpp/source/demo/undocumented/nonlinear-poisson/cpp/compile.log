This is FFC, the FEniCS Form Compiler, version 0.9.10.
For further information, visit http://www.fenics.org/ffc/.

Compiling form NonlinearPoisson

Compiler stage 1: Analyzing form(s)
-----------------------------------
  
  Name:                             'F'
  Rank:                             1
  Cell:                             <triangle cell in R2>
  Topological dimension:            2
  Geometric dimension:              2
  Number of facets:                 3
  Number of coefficients:           2
  Number of cell domains:           1
  Number of exterior facet domains: 0
  Number or interior facet domains: 0
  Number of macro cell domains:     0
  Number of surface domains:        0
  Arguments:                        '[v_0]'
  Coefficients:                     '[w_0, w_1]'
  Argument names:                   '[v]'
  Coefficient names:                '[f, u]'
  Unique elements:                  'CG1(?)'
  Unique sub elements:              'CG1(?)'
  
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Estimated cost of tensor representation: 5
  representation:    auto --> quadrature
  Selecting quadrature degree based on total polynomial degree of integrand: 2
  quadrature_degree: auto --> 2
  quadrature_rule:   auto --> default
  
  Name:                             'J'
  Rank:                             2
  Cell:                             <triangle cell in R2>
  Topological dimension:            2
  Geometric dimension:              2
  Number of facets:                 3
  Number of coefficients:           1
  Number of cell domains:           1
  Number of exterior facet domains: 0
  Number or interior facet domains: 0
  Number of macro cell domains:     0
  Number of surface domains:        0
  Arguments:                        '[v_0, v_1]'
  Coefficients:                     '[w_0]'
  Argument names:                   '[v, du]'
  Coefficient names:                '[u]'
  Unique elements:                  'CG1(?)'
  Unique sub elements:              'CG1(?)'
  
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Estimated cost of tensor representation: 4
  representation:    auto --> quadrature
  Selecting quadrature degree based on total polynomial degree of integrand: 2
  quadrature_degree: auto --> 2
  quadrature_rule:   auto --> default
  
Compiler stage 1 finished in 0.048002 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 1 elements
  Reusing element from cache
  Computing representation of 1 dofmaps
  Reusing element from cache
  Computing representation of integrals
  Computing quadrature representation
  Reusing element from cache
  Reusing element from cache
  
  QG-utils, psi_tables:
  {3: {FiniteElement('Lagrange', Cell('triangle', Space(2)), 1, None): {None: {(0, 1): array([[-1.0, -1.0, -1.0],
         [0.0, 1.11022302463e-16, 1.11022302463e-16],
         [1.0, 1.0, 1.0]], dtype=object), (1, 0): array([[-1.0, -1.0, -1.0],
         [1.0, 1.0, 1.0],
         [0.0, 0.0, 0.0]], dtype=object), (0, 0): array([[0.666666666667, 0.166666666667, 0.166666666667],
         [0.166666666667, 0.166666666667, 0.666666666667],
         [0.166666666667, 0.666666666667, 0.166666666667]], dtype=object)}}}}
  
  QG-utils, psi_tables, flat_tables:
  {'FE0_D10': array([[-1.0, 1.0, 0.0],
         [-1.0, 1.0, 0.0],
         [-1.0, 1.0, 0.0]], dtype=object), 'FE0_D01': array([[-1.0, 0.0, 1.0],
         [-1.0, 1.11022302463e-16, 1.0],
         [-1.0, 1.11022302463e-16, 1.0]], dtype=object), 'FE0': array([[0.666666666667, 0.166666666667, 0.166666666667],
         [0.166666666667, 0.166666666667, 0.666666666667],
         [0.166666666667, 0.666666666667, 0.166666666667]], dtype=object)}
  
  tables: {'FE0_D10': array([[-1.0, 1.0, 0.0],
         [-1.0, 1.0, 0.0],
         [-1.0, 1.0, 0.0]], dtype=object), 'FE0_D01': array([[-1.0, 0.0, 1.0],
         [-1.0, 1.11022302463e-16, 1.0],
         [-1.0, 1.11022302463e-16, 1.0]], dtype=object), 'FE0': array([[0.666666666667, 0.166666666667, 0.166666666667],
         [0.166666666667, 0.166666666667, 0.666666666667],
         [0.166666666667, 0.666666666667, 0.166666666667]], dtype=object)}
  
  name_map: {}
  
  inv_name_map: {'FE0_D10': 'FE0_D10', 'FE0_D01': 'FE0_D01', 'FE0': 'FE0'}
  
  QG-utils, psi_tables, unique_tables:
  {'FE0_D01': array([[-1.0, 1.0],
         [-1.0, 1.0],
         [-1.0, 1.0]], dtype=object), 'FE0': array([[0.666666666667, 0.166666666667, 0.166666666667],
         [0.166666666667, 0.166666666667, 0.666666666667],
         [0.166666666667, 0.666666666667, 0.166666666667]], dtype=object)}
  
  QG-utils, psi_tables, name_map:
  {'FE0_D10': ('FE0_D01', (1, [0, 1]), False, False), 'FE0_D01': ('FE0_D01', (0, [0, 2]), False, False), 'FE0': ('FE0', (), False, False)}
  Transforming cell integral
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Computing quadrature representation
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  
  QG-utils, psi_tables:
  {3: {FiniteElement('Lagrange', Cell('triangle', Space(2)), 1, None): {None: {(0, 1): array([[-1.0, -1.0, -1.0],
         [0.0, 1.11022302463e-16, 1.11022302463e-16],
         [1.0, 1.0, 1.0]], dtype=object), (1, 0): array([[-1.0, -1.0, -1.0],
         [1.0, 1.0, 1.0],
         [0.0, 0.0, 0.0]], dtype=object), (0, 0): array([[0.666666666667, 0.166666666667, 0.166666666667],
         [0.166666666667, 0.166666666667, 0.666666666667],
         [0.166666666667, 0.666666666667, 0.166666666667]], dtype=object)}}}}
  
  QG-utils, psi_tables, flat_tables:
  {'FE0_D10': array([[-1.0, 1.0, 0.0],
         [-1.0, 1.0, 0.0],
         [-1.0, 1.0, 0.0]], dtype=object), 'FE0_D01': array([[-1.0, 0.0, 1.0],
         [-1.0, 1.11022302463e-16, 1.0],
         [-1.0, 1.11022302463e-16, 1.0]], dtype=object), 'FE0': array([[0.666666666667, 0.166666666667, 0.166666666667],
         [0.166666666667, 0.166666666667, 0.666666666667],
         [0.166666666667, 0.666666666667, 0.166666666667]], dtype=object)}
  
  tables: {'FE0_D10': array([[-1.0, 1.0, 0.0],
         [-1.0, 1.0, 0.0],
         [-1.0, 1.0, 0.0]], dtype=object), 'FE0_D01': array([[-1.0, 0.0, 1.0],
         [-1.0, 1.11022302463e-16, 1.0],
         [-1.0, 1.11022302463e-16, 1.0]], dtype=object), 'FE0': array([[0.666666666667, 0.166666666667, 0.166666666667],
         [0.166666666667, 0.166666666667, 0.666666666667],
         [0.166666666667, 0.666666666667, 0.166666666667]], dtype=object)}
  
  name_map: {}
  
  inv_name_map: {'FE0_D10': 'FE0_D10', 'FE0_D01': 'FE0_D01', 'FE0': 'FE0'}
  
  QG-utils, psi_tables, unique_tables:
  {'FE0_D01': array([[-1.0, 1.0],
         [-1.0, 1.0],
         [-1.0, 1.0]], dtype=object), 'FE0': array([[0.666666666667, 0.166666666667, 0.166666666667],
         [0.166666666667, 0.166666666667, 0.666666666667],
         [0.166666666667, 0.666666666667, 0.166666666667]], dtype=object)}
  
  QG-utils, psi_tables, name_map:
  {'FE0_D10': ('FE0_D01', (1, [0, 1]), False, False), 'FE0_D01': ('FE0_D01', (0, [0, 2]), False, False), 'FE0': ('FE0', (), False, False)}
  Transforming cell integral
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Computing representation of forms
  
Compiler stage 2 finished in 0.04493 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Optimising expressions for cell integral
  Optimising expressions for cell integral
  
Compiler stage 3 finished in 0.0136871 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 1 elements
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: K_11
  Removing unused variable: K_10
  Removing unused variable: K_01
  Removing unused variable: K_00
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Generating code for 1 dofmaps
  Generating code for integrals
  Removing unused variable: circumradius
  Removing unused variable: v0v1
  Removing unused variable: v0v2
  Removing unused variable: v1v2
  Removing unused variable: volume
  Cell, number of operations to compute tensor: 180
  Removing unused variable: circumradius
  Removing unused variable: v0v1
  Removing unused variable: v0v2
  Removing unused variable: v1v2
  Removing unused variable: volume
  Cell, number of operations to compute tensor: 387
  Generating code for forms
  
Compiler stage 4 finished in 0.117334 seconds.

Compiler stage 4.1: Generating additional wrapper code
------------------------------------------------------
  Generating wrapper code for DOLFIN
  
Compiler stage 4.1 finished in 0.00272012 seconds.

Compiler stage 5: Formatting code
---------------------------------
  Output written to ./NonlinearPoisson.h.
  
Compiler stage 5 finished in 0.00125289 seconds.

[1;37;32mFFC finished in 0.228494 seconds.[0m
This is FFC, the FEniCS Form Compiler, version 0.9.10.
For further information, visit http://www.fenics.org/ffc/.

Compiling form NonlinearPoisson

Compiler stage 1: Analyzing form(s)
-----------------------------------
  
  Name:                             'F'
  Rank:                             1
  Cell:                             <triangle cell in R2>
  Topological dimension:            2
  Geometric dimension:              2
  Number of facets:                 3
  Number of coefficients:           2
  Number of cell domains:           1
  Number of exterior facet domains: 0
  Number or interior facet domains: 0
  Number of macro cell domains:     0
  Number of surface domains:        0
  Arguments:                        '[v_0]'
  Coefficients:                     '[w_0, w_1]'
  Argument names:                   '[v]'
  Coefficient names:                '[f, u]'
  Unique elements:                  'CG1(?)'
  Unique sub elements:              'CG1(?)'
  
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Estimated cost of tensor representation: 5
  representation:    auto --> quadrature
  Selecting quadrature degree based on total polynomial degree of integrand: 2
  quadrature_degree: auto --> 2
  quadrature_rule:   auto --> default
  
  Name:                             'J'
  Rank:                             2
  Cell:                             <triangle cell in R2>
  Topological dimension:            2
  Geometric dimension:              2
  Number of facets:                 3
  Number of coefficients:           1
  Number of cell domains:           1
  Number of exterior facet domains: 0
  Number or interior facet domains: 0
  Number of macro cell domains:     0
  Number of surface domains:        0
  Arguments:                        '[v_0, v_1]'
  Coefficients:                     '[w_0]'
  Argument names:                   '[v, du]'
  Coefficient names:                '[u]'
  Unique elements:                  'CG1(?)'
  Unique sub elements:              'CG1(?)'
  
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Estimated cost of tensor representation: 4
  representation:    auto --> quadrature
  Selecting quadrature degree based on total polynomial degree of integrand: 2
  quadrature_degree: auto --> 2
  quadrature_rule:   auto --> default
  
Compiler stage 1 finished in 0.048033 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 1 elements
  Reusing element from cache
  Computing representation of 1 dofmaps
  Reusing element from cache
  Computing representation of integrals
  Computing quadrature representation
  Reusing element from cache
  Reusing element from cache
  
  QG-utils, psi_tables:
  {3: {FiniteElement('Lagrange', Cell('triangle', Space(2)), 1, None): {None: {(0, 1): array([[-1.0, -1.0, -1.0],
         [0.0, 1.11022302463e-16, 1.11022302463e-16],
         [1.0, 1.0, 1.0]], dtype=object), (1, 0): array([[-1.0, -1.0, -1.0],
         [1.0, 1.0, 1.0],
         [0.0, 0.0, 0.0]], dtype=object), (0, 0): array([[0.666666666667, 0.166666666667, 0.166666666667],
         [0.166666666667, 0.166666666667, 0.666666666667],
         [0.166666666667, 0.666666666667, 0.166666666667]], dtype=object)}}}}
  
  QG-utils, psi_tables, flat_tables:
  {'FE0_D10': array([[-1.0, 1.0, 0.0],
         [-1.0, 1.0, 0.0],
         [-1.0, 1.0, 0.0]], dtype=object), 'FE0_D01': array([[-1.0, 0.0, 1.0],
         [-1.0, 1.11022302463e-16, 1.0],
         [-1.0, 1.11022302463e-16, 1.0]], dtype=object), 'FE0': array([[0.666666666667, 0.166666666667, 0.166666666667],
         [0.166666666667, 0.166666666667, 0.666666666667],
         [0.166666666667, 0.666666666667, 0.166666666667]], dtype=object)}
  
  tables: {'FE0_D10': array([[-1.0, 1.0, 0.0],
         [-1.0, 1.0, 0.0],
         [-1.0, 1.0, 0.0]], dtype=object), 'FE0_D01': array([[-1.0, 0.0, 1.0],
         [-1.0, 1.11022302463e-16, 1.0],
         [-1.0, 1.11022302463e-16, 1.0]], dtype=object), 'FE0': array([[0.666666666667, 0.166666666667, 0.166666666667],
         [0.166666666667, 0.166666666667, 0.666666666667],
         [0.166666666667, 0.666666666667, 0.166666666667]], dtype=object)}
  
  name_map: {}
  
  inv_name_map: {'FE0_D10': 'FE0_D10', 'FE0_D01': 'FE0_D01', 'FE0': 'FE0'}
  
  QG-utils, psi_tables, unique_tables:
  {'FE0_D01': array([[-1.0, 1.0],
         [-1.0, 1.0],
         [-1.0, 1.0]], dtype=object), 'FE0': array([[0.666666666667, 0.166666666667, 0.166666666667],
         [0.166666666667, 0.166666666667, 0.666666666667],
         [0.166666666667, 0.666666666667, 0.166666666667]], dtype=object)}
  
  QG-utils, psi_tables, name_map:
  {'FE0_D10': ('FE0_D01', (1, [0, 1]), False, False), 'FE0_D01': ('FE0_D01', (0, [0, 2]), False, False), 'FE0': ('FE0', (), False, False)}
  Transforming cell integral
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Computing quadrature representation
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  
  QG-utils, psi_tables:
  {3: {FiniteElement('Lagrange', Cell('triangle', Space(2)), 1, None): {None: {(0, 1): array([[-1.0, -1.0, -1.0],
         [0.0, 1.11022302463e-16, 1.11022302463e-16],
         [1.0, 1.0, 1.0]], dtype=object), (1, 0): array([[-1.0, -1.0, -1.0],
         [1.0, 1.0, 1.0],
         [0.0, 0.0, 0.0]], dtype=object), (0, 0): array([[0.666666666667, 0.166666666667, 0.166666666667],
         [0.166666666667, 0.166666666667, 0.666666666667],
         [0.166666666667, 0.666666666667, 0.166666666667]], dtype=object)}}}}
  
  QG-utils, psi_tables, flat_tables:
  {'FE0_D10': array([[-1.0, 1.0, 0.0],
         [-1.0, 1.0, 0.0],
         [-1.0, 1.0, 0.0]], dtype=object), 'FE0_D01': array([[-1.0, 0.0, 1.0],
         [-1.0, 1.11022302463e-16, 1.0],
         [-1.0, 1.11022302463e-16, 1.0]], dtype=object), 'FE0': array([[0.666666666667, 0.166666666667, 0.166666666667],
         [0.166666666667, 0.166666666667, 0.666666666667],
         [0.166666666667, 0.666666666667, 0.166666666667]], dtype=object)}
  
  tables: {'FE0_D10': array([[-1.0, 1.0, 0.0],
         [-1.0, 1.0, 0.0],
         [-1.0, 1.0, 0.0]], dtype=object), 'FE0_D01': array([[-1.0, 0.0, 1.0],
         [-1.0, 1.11022302463e-16, 1.0],
         [-1.0, 1.11022302463e-16, 1.0]], dtype=object), 'FE0': array([[0.666666666667, 0.166666666667, 0.166666666667],
         [0.166666666667, 0.166666666667, 0.666666666667],
         [0.166666666667, 0.666666666667, 0.166666666667]], dtype=object)}
  
  name_map: {}
  
  inv_name_map: {'FE0_D10': 'FE0_D10', 'FE0_D01': 'FE0_D01', 'FE0': 'FE0'}
  
  QG-utils, psi_tables, unique_tables:
  {'FE0_D01': array([[-1.0, 1.0],
         [-1.0, 1.0],
         [-1.0, 1.0]], dtype=object), 'FE0': array([[0.666666666667, 0.166666666667, 0.166666666667],
         [0.166666666667, 0.166666666667, 0.666666666667],
         [0.166666666667, 0.666666666667, 0.166666666667]], dtype=object)}
  
  QG-utils, psi_tables, name_map:
  {'FE0_D10': ('FE0_D01', (1, [0, 1]), False, False), 'FE0_D01': ('FE0_D01', (0, [0, 2]), False, False), 'FE0': ('FE0', (), False, False)}
  Transforming cell integral
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Computing representation of forms
  
Compiler stage 2 finished in 0.0468221 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Optimising expressions for cell integral
  Optimising expressions for cell integral
  
Compiler stage 3 finished in 0.0136771 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 1 elements
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: K_11
  Removing unused variable: K_10
  Removing unused variable: K_01
  Removing unused variable: K_00
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Generating code for 1 dofmaps
  Generating code for integrals
  Removing unused variable: circumradius
  Removing unused variable: v0v1
  Removing unused variable: v0v2
  Removing unused variable: v1v2
  Removing unused variable: volume
  Cell, number of operations to compute tensor: 180
  Removing unused variable: circumradius
  Removing unused variable: v0v1
  Removing unused variable: v0v2
  Removing unused variable: v1v2
  Removing unused variable: volume
  Cell, number of operations to compute tensor: 387
  Generating code for forms
  
Compiler stage 4 finished in 0.115732 seconds.

Compiler stage 4.1: Generating additional wrapper code
------------------------------------------------------
  Generating wrapper code for DOLFIN
  
Compiler stage 4.1 finished in 0.00261402 seconds.

Compiler stage 5: Formatting code
---------------------------------
  Output written to ./NonlinearPoisson.h.
  
Compiler stage 5 finished in 0.00129104 seconds.

[1;37;32mFFC finished in 0.228901 seconds.[0m
