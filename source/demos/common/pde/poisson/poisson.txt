
.. warning::

    The documentation for this demo is incomplete, we still need to link to
    relevant sections of the programmer's reference (for class names).
    We probably also want to give more comments on what the individual
    statements in the code snippets mean and if there are any alternatives.

This demo illustrates how to:

* use VariationalProblem
* create and apply Dirichlet boundary conditions
* define Expressions
* define FunctionSpace
* create a Subdomain

.. index::
    single: VariationalProblem
    triple: forms; attach; expression
    single: Expression
    single: Subdomain
    single: DirichletBC
    single: FunctionSpace

Governing equations
-------------------

The Poisson equation is the cannonical elliptic partial differential equation.
For a domain :math:`\Omega \subset \mathbb{R}^n`, the Poisson equation with
particular boundary conditions reads:

.. math::
   - \nabla^{2} u &= f \quad {\rm in} \ \Omega \\
                u &= 0 \quad {\rm on} \ \Gamma_{D} \\
                - \nabla u \cdot \boldsymbol{n} &= g \quad {\rm on} \ \Gamma_{N} \\


Find :math:`u \in V` such that

.. math::
   a(u, v) = L(v) \quad \forall v \in V,

where

.. math::
   a(u, v) &= \int_{\Omega} \nabla u \cdot \nabla v \, \rm{d}\Omega \\
   L(v)    &= \int_{\Omega} f v \, \rm{d}\Omega
            - \int_{\Gamma_{N}} g v \, \rm{d}\Gamma

The expression :math:`a(u, v)` is the bilinear form and :math:`L(v)`
is the linear form.

Problem definition
------------------

The following definitions of functions and boundaries are used in this demo:

* :math:`\Omega = [0,1] \times [0,1]`
* :math:`\Gamma_{D} = \{(\pm 1, y) \in \partial \Omega\}` (Dirichlet boundary)
* :math:`\Gamma_{N} = \{(x, \pm 1) \in \partial \Omega\}` (Neumann boundary)
* :math:`h = \sin(5x)` (normal flux)
* :math:`f = 10\exp(-((x - 0.5)^2 + (y - 0.5)^2) / 0.02)` (source term)

